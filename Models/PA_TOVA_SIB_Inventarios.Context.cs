//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebInventario2._0.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PA_TOVA_SIB_InventariosEntities : DbContext
    {
        public PA_TOVA_SIB_InventariosEntities()
            : base("name=PA_TOVA_SIB_InventariosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AF_LOG> AF_LOG { get; set; }
        public virtual DbSet<Ajustes> Ajustes { get; set; }
        public virtual DbSet<Ajustes_Inventario_MERCH> Ajustes_Inventario_MERCH { get; set; }
        public virtual DbSet<AjustesProveedoresNacionales> AjustesProveedoresNacionales { get; set; }
        public virtual DbSet<Archivos_AjustesManuales> Archivos_AjustesManuales { get; set; }
        public virtual DbSet<Archivos_ConteosManuales> Archivos_ConteosManuales { get; set; }
        public virtual DbSet<Bultos_Carga_Descarga_Posterior> Bultos_Carga_Descarga_Posterior { get; set; }
        public virtual DbSet<BultosNoIdentificados> BultosNoIdentificados { get; set; }
        public virtual DbSet<BultosSinMaestroArticulos> BultosSinMaestroArticulos { get; set; }
        public virtual DbSet<Ciclico_Producto> Ciclico_Producto { get; set; }
        public virtual DbSet<Ciclico_Ubicacion> Ciclico_Ubicacion { get; set; }
        public virtual DbSet<Ciclico_UbicacionCodigo> Ciclico_UbicacionCodigo { get; set; }
        public virtual DbSet<Ciclico_Zonificacion> Ciclico_Zonificacion { get; set; }
        public virtual DbSet<ComplementosMuebleria> ComplementosMuebleria { get; set; }
        public virtual DbSet<CondicionSugerencia_ConteoDiario> CondicionSugerencia_ConteoDiario { get; set; }
        public virtual DbSet<ConteoCiclico> ConteoCiclico { get; set; }
        public virtual DbSet<ConteoCiclico_Auditoria> ConteoCiclico_Auditoria { get; set; }
        public virtual DbSet<ConteoCiclico_Conteo> ConteoCiclico_Conteo { get; set; }
        public virtual DbSet<ConteoCiclico_DivisionesZonas> ConteoCiclico_DivisionesZonas { get; set; }
        public virtual DbSet<ConteoCiclico_UpcNoExiste> ConteoCiclico_UpcNoExiste { get; set; }
        public virtual DbSet<ConteoDiario> ConteoDiario { get; set; }
        public virtual DbSet<ConteoDiario_Analisis> ConteoDiario_Analisis { get; set; }
        public virtual DbSet<ConteoDiario_Detalle> ConteoDiario_Detalle { get; set; }
        public virtual DbSet<ConteoDiario_DetGruposAprobacionAjustes> ConteoDiario_DetGruposAprobacionAjustes { get; set; }
        public virtual DbSet<ConteoDiario_GruposAprobacionAjustes> ConteoDiario_GruposAprobacionAjustes { get; set; }
        public virtual DbSet<Control_Inv_EstilosTmp> Control_Inv_EstilosTmp { get; set; }
        public virtual DbSet<Control_Inv_Upc_SinDoc> Control_Inv_Upc_SinDoc { get; set; }
        public virtual DbSet<Control_Inventario_Documentos> Control_Inventario_Documentos { get; set; }
        public virtual DbSet<Control_Inventario_Estados> Control_Inventario_Estados { get; set; }
        public virtual DbSet<Control_Inventario_Sku> Control_Inventario_Sku { get; set; }
        public virtual DbSet<Control_Inventario_TiposAjustes> Control_Inventario_TiposAjustes { get; set; }
        public virtual DbSet<Control_Inventario_TiposConteo> Control_Inventario_TiposConteo { get; set; }
        public virtual DbSet<Control_Inventario_Upc> Control_Inventario_Upc { get; set; }
        public virtual DbSet<ControlesCargaEnviados> ControlesCargaEnviados { get; set; }
        public virtual DbSet<DepartamentosZonas> DepartamentosZonas { get; set; }
        public virtual DbSet<DepositoPiso> DepositoPiso { get; set; }
        public virtual DbSet<Detalle_Ajustes_Inventario_MERCH> Detalle_Ajustes_Inventario_MERCH { get; set; }
        public virtual DbSet<Detalle_Archivos_AjustesManuales> Detalle_Archivos_AjustesManuales { get; set; }
        public virtual DbSet<Detalle_Archivos_ConteosManuales> Detalle_Archivos_ConteosManuales { get; set; }
        public virtual DbSet<DivisionesZonas> DivisionesZonas { get; set; }
        public virtual DbSet<EntradasTemporales> EntradasTemporales { get; set; }
        public virtual DbSet<EntradasTemporalesAutorizaciones> EntradasTemporalesAutorizaciones { get; set; }
        public virtual DbSet<EntradasTemporalesCalculos> EntradasTemporalesCalculos { get; set; }
        public virtual DbSet<Estatus_ConteoDiario> Estatus_ConteoDiario { get; set; }
        public virtual DbSet<Estatus_TareasConteoDiario> Estatus_TareasConteoDiario { get; set; }
        public virtual DbSet<Inventario_Conteo> Inventario_Conteo { get; set; }
        public virtual DbSet<Inventario_DetalleConteo> Inventario_DetalleConteo { get; set; }
        public virtual DbSet<InventarioAntesTomaStevens> InventarioAntesTomaStevens { get; set; }
        public virtual DbSet<InventarioAntesTomaStevensCaja> InventarioAntesTomaStevensCaja { get; set; }
        public virtual DbSet<InventarioDeposito> InventarioDeposito { get; set; }
        public virtual DbSet<InventarioPiso> InventarioPiso { get; set; }
        public virtual DbSet<JerarquiasMERCH> JerarquiasMERCH { get; set; }
        public virtual DbSet<LogGeneracion_Tareas_ConteoDiario> LogGeneracion_Tareas_ConteoDiario { get; set; }
        public virtual DbSet<Mermas> Mermas { get; set; }
        public virtual DbSet<MotivosAjustes_ConteoDiario> MotivosAjustes_ConteoDiario { get; set; }
        public virtual DbSet<param_condicion> param_condicion { get; set; }
        public virtual DbSet<Parametros_Sugerencia_Conteo_Diario> Parametros_Sugerencia_Conteo_Diario { get; set; }
        public virtual DbSet<RegistroAuditorias> RegistroAuditorias { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tareas_ConteoDiario> Tareas_ConteoDiario { get; set; }
        public virtual DbSet<Tareas_Motivos> Tareas_Motivos { get; set; }
        public virtual DbSet<TransaccionesVentasNoMarcadas> TransaccionesVentasNoMarcadas { get; set; }
        public virtual DbSet<UbicacionesTerminadas> UbicacionesTerminadas { get; set; }
        public virtual DbSet<VentasNoProcesadas> VentasNoProcesadas { get; set; }
        public virtual DbSet<VentasNoProcesadas_Acciones> VentasNoProcesadas_Acciones { get; set; }
        public virtual DbSet<VentasNoProcesadas_Recorrido> VentasNoProcesadas_Recorrido { get; set; }
        public virtual DbSet<Ajustes_SecuenciaArchivos> Ajustes_SecuenciaArchivos { get; set; }
    
        [DbFunction("PA_TOVA_SIB_InventariosEntities", "fn_ConteoDiario_CostosxDoc")]
        public virtual IQueryable<fn_ConteoDiario_CostosxDoc_Result> fn_ConteoDiario_CostosxDoc(Nullable<int> conteoDiario_ID)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ConteoDiario_CostosxDoc_Result>("[PA_TOVA_SIB_InventariosEntities].[fn_ConteoDiario_CostosxDoc](@ConteoDiario_ID)", conteoDiario_IDParameter);
        }
    
        [DbFunction("PA_TOVA_SIB_InventariosEntities", "fn_GetBasesXUsuario")]
        public virtual IQueryable<fn_GetBasesXUsuario_Result> fn_GetBasesXUsuario(Nullable<int> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetBasesXUsuario_Result>("[PA_TOVA_SIB_InventariosEntities].[fn_GetBasesXUsuario](@UsuarioId)", usuarioIdParameter);
        }
    
        [DbFunction("PA_TOVA_SIB_InventariosEntities", "fn_InfoConteo_SkuDoc")]
        public virtual IQueryable<fn_InfoConteo_SkuDoc_Result> fn_InfoConteo_SkuDoc(Nullable<int> conteoDiario_ID, Nullable<decimal> sku_id)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var sku_idParameter = sku_id.HasValue ?
                new ObjectParameter("sku_id", sku_id) :
                new ObjectParameter("sku_id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_InfoConteo_SkuDoc_Result>("[PA_TOVA_SIB_InventariosEntities].[fn_InfoConteo_SkuDoc](@ConteoDiario_ID, @sku_id)", conteoDiario_IDParameter, sku_idParameter);
        }
    
        [DbFunction("PA_TOVA_SIB_InventariosEntities", "fn_MERCH_DatosUltimaEntrada")]
        public virtual IQueryable<fn_MERCH_DatosUltimaEntrada_Result> fn_MERCH_DatosUltimaEntrada(Nullable<int> idbase, Nullable<decimal> sku_id, Nullable<bool> sw_proveedor, Nullable<bool> sw_B0, Nullable<bool> sw_transferencia)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var sku_idParameter = sku_id.HasValue ?
                new ObjectParameter("sku_id", sku_id) :
                new ObjectParameter("sku_id", typeof(decimal));
    
            var sw_proveedorParameter = sw_proveedor.HasValue ?
                new ObjectParameter("sw_proveedor", sw_proveedor) :
                new ObjectParameter("sw_proveedor", typeof(bool));
    
            var sw_B0Parameter = sw_B0.HasValue ?
                new ObjectParameter("sw_B0", sw_B0) :
                new ObjectParameter("sw_B0", typeof(bool));
    
            var sw_transferenciaParameter = sw_transferencia.HasValue ?
                new ObjectParameter("sw_transferencia", sw_transferencia) :
                new ObjectParameter("sw_transferencia", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MERCH_DatosUltimaEntrada_Result>("[PA_TOVA_SIB_InventariosEntities].[fn_MERCH_DatosUltimaEntrada](@idbase, @sku_id, @sw_proveedor, @sw_B0, @sw_transferencia)", idbaseParameter, sku_idParameter, sw_proveedorParameter, sw_B0Parameter, sw_transferenciaParameter);
        }
    
        public virtual int Bultos_Carga_Descarga_PosteriorInsertar(string bulto, Nullable<System.DateTime> fechacarga, Nullable<System.DateTime> fechadescarga)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            var fechacargaParameter = fechacarga.HasValue ?
                new ObjectParameter("fechacarga", fechacarga) :
                new ObjectParameter("fechacarga", typeof(System.DateTime));
    
            var fechadescargaParameter = fechadescarga.HasValue ?
                new ObjectParameter("fechadescarga", fechadescarga) :
                new ObjectParameter("fechadescarga", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bultos_Carga_Descarga_PosteriorInsertar", bultoParameter, fechacargaParameter, fechadescargaParameter);
        }
    
        public virtual int Cargar_Archivos_AjustesManuales(string usuario, string nomArchivo, string nomOrigArchivo, Nullable<int> @base, string descripcion, string motivo, ObjectParameter oK, ObjectParameter ajuste_ID, ObjectParameter mensaje_error)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nomArchivoParameter = nomArchivo != null ?
                new ObjectParameter("NomArchivo", nomArchivo) :
                new ObjectParameter("NomArchivo", typeof(string));
    
            var nomOrigArchivoParameter = nomOrigArchivo != null ?
                new ObjectParameter("NomOrigArchivo", nomOrigArchivo) :
                new ObjectParameter("NomOrigArchivo", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cargar_Archivos_AjustesManuales", usuarioParameter, nomArchivoParameter, nomOrigArchivoParameter, baseParameter, descripcionParameter, motivoParameter, oK, ajuste_ID, mensaje_error);
        }
    
        public virtual int Cargar_Archivos_AjustesManuales_original(string usuario, string nomArchivo, string nomOrigArchivo, Nullable<int> @base, string descripcion, string motivo, ObjectParameter oK, ObjectParameter ajuste_ID, ObjectParameter mensaje_error)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nomArchivoParameter = nomArchivo != null ?
                new ObjectParameter("NomArchivo", nomArchivo) :
                new ObjectParameter("NomArchivo", typeof(string));
    
            var nomOrigArchivoParameter = nomOrigArchivo != null ?
                new ObjectParameter("NomOrigArchivo", nomOrigArchivo) :
                new ObjectParameter("NomOrigArchivo", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cargar_Archivos_AjustesManuales_original", usuarioParameter, nomArchivoParameter, nomOrigArchivoParameter, baseParameter, descripcionParameter, motivoParameter, oK, ajuste_ID, mensaje_error);
        }
    
        public virtual int Cargar_Archivos_AjustesManuales_v2(string usuario, string nomArchivo, string nomOrigArchivo, Nullable<int> @base, string descripcion, string motivo, ObjectParameter oK, ObjectParameter ajuste_ID, ObjectParameter mensaje_error)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nomArchivoParameter = nomArchivo != null ?
                new ObjectParameter("NomArchivo", nomArchivo) :
                new ObjectParameter("NomArchivo", typeof(string));
    
            var nomOrigArchivoParameter = nomOrigArchivo != null ?
                new ObjectParameter("NomOrigArchivo", nomOrigArchivo) :
                new ObjectParameter("NomOrigArchivo", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cargar_Archivos_AjustesManuales_v2", usuarioParameter, nomArchivoParameter, nomOrigArchivoParameter, baseParameter, descripcionParameter, motivoParameter, oK, ajuste_ID, mensaje_error);
        }
    
        public virtual int Cargar_Archivos_ConteosManuales(string usuario, string nomArchivo, string nomOrigArchivo, Nullable<int> @base, Nullable<System.DateTime> fecha_Conteo, string grouping_label, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nomArchivoParameter = nomArchivo != null ?
                new ObjectParameter("NomArchivo", nomArchivo) :
                new ObjectParameter("NomArchivo", typeof(string));
    
            var nomOrigArchivoParameter = nomOrigArchivo != null ?
                new ObjectParameter("NomOrigArchivo", nomOrigArchivo) :
                new ObjectParameter("NomOrigArchivo", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(int));
    
            var fecha_ConteoParameter = fecha_Conteo.HasValue ?
                new ObjectParameter("Fecha_Conteo", fecha_Conteo) :
                new ObjectParameter("Fecha_Conteo", typeof(System.DateTime));
    
            var grouping_labelParameter = grouping_label != null ?
                new ObjectParameter("grouping_label", grouping_label) :
                new ObjectParameter("grouping_label", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cargar_Archivos_ConteosManuales", usuarioParameter, nomArchivoParameter, nomOrigArchivoParameter, baseParameter, fecha_ConteoParameter, grouping_labelParameter, oK, mensaje_error);
        }
    
        public virtual int Cargar_Archivos_ConteosManuales_UPC(string usuario, string nomArchivo, string nomOrigArchivo, Nullable<int> @base, Nullable<System.DateTime> fecha_Conteo, string cod_Division, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nomArchivoParameter = nomArchivo != null ?
                new ObjectParameter("NomArchivo", nomArchivo) :
                new ObjectParameter("NomArchivo", typeof(string));
    
            var nomOrigArchivoParameter = nomOrigArchivo != null ?
                new ObjectParameter("NomOrigArchivo", nomOrigArchivo) :
                new ObjectParameter("NomOrigArchivo", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(int));
    
            var fecha_ConteoParameter = fecha_Conteo.HasValue ?
                new ObjectParameter("Fecha_Conteo", fecha_Conteo) :
                new ObjectParameter("Fecha_Conteo", typeof(System.DateTime));
    
            var cod_DivisionParameter = cod_Division != null ?
                new ObjectParameter("Cod_Division", cod_Division) :
                new ObjectParameter("Cod_Division", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cargar_Archivos_ConteosManuales_UPC", usuarioParameter, nomArchivoParameter, nomOrigArchivoParameter, baseParameter, fecha_ConteoParameter, cod_DivisionParameter, oK, mensaje_error);
        }
    
        public virtual int ciclicoUpdateStatus_()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ciclicoUpdateStatus_");
        }
    
        public virtual int ConteoDiario_Analisis_ActualizarConteo(Nullable<int> conteoDiario_ID, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Analisis_ActualizarConteo", conteoDiario_IDParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_Cambiar_Fecha(Nullable<int> conteoDiario_ID, Nullable<System.DateTime> fecha, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Cambiar_Fecha", conteoDiario_IDParameter, fechaParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_Cambiar_Status(Nullable<int> conteoDiario_ID, Nullable<int> nuevo_status, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var nuevo_statusParameter = nuevo_status.HasValue ?
                new ObjectParameter("nuevo_status", nuevo_status) :
                new ObjectParameter("nuevo_status", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Cambiar_Status", conteoDiario_IDParameter, nuevo_statusParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_Cancelar_ById(Nullable<int> conteoDiario_ID, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Cancelar_ById", conteoDiario_IDParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_Cancelar_DocsVencidos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Cancelar_DocsVencidos");
        }
    
        public virtual int ConteoDiario_Cerrar_ById(Nullable<int> conteoDiario_ID, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Cerrar_ById", conteoDiario_IDParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_Crear_Tarea_Manual(Nullable<int> conteoDiario_ID, string tipo_ubicacion, string upc, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var tipo_ubicacionParameter = tipo_ubicacion != null ?
                new ObjectParameter("tipo_ubicacion", tipo_ubicacion) :
                new ObjectParameter("tipo_ubicacion", typeof(string));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Crear_Tarea_Manual", conteoDiario_IDParameter, tipo_ubicacionParameter, upcParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_Crear_TareasById(Nullable<int> conteoDiario_ID, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Crear_TareasById", conteoDiario_IDParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_Crear_TareasById_Old(Nullable<int> conteoDiario_ID, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Crear_TareasById_Old", conteoDiario_IDParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_Crear_TareasProgramadas(Nullable<System.DateTime> fecha_Conteo)
        {
            var fecha_ConteoParameter = fecha_Conteo.HasValue ?
                new ObjectParameter("Fecha_Conteo", fecha_Conteo) :
                new ObjectParameter("Fecha_Conteo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Crear_TareasProgramadas", fecha_ConteoParameter);
        }
    
        public virtual int ConteoDiario_Crear_TareasProgramadas_Old(Nullable<System.DateTime> fecha_Conteo)
        {
            var fecha_ConteoParameter = fecha_Conteo.HasValue ?
                new ObjectParameter("Fecha_Conteo", fecha_Conteo) :
                new ObjectParameter("Fecha_Conteo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_Crear_TareasProgramadas_Old", fecha_ConteoParameter);
        }
    
        public virtual int ConteoDiario_LiberarDocsEnUso()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_LiberarDocsEnUso");
        }
    
        public virtual int ConteoDiario_LiberarTareasPendientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_LiberarTareasPendientes");
        }
    
        public virtual int ConteoDiario_SetReadyToClose_ById(Nullable<int> conteoDiario_ID, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_SetReadyToClose_ById", conteoDiario_IDParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ConteoDiario_TerminarAnalisis_ById(Nullable<int> conteoDiario_ID, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConteoDiario_TerminarAnalisis_ById", conteoDiario_IDParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int ImportarEntradaET(Nullable<int> entrada)
        {
            var entradaParameter = entrada.HasValue ?
                new ObjectParameter("entrada", entrada) :
                new ObjectParameter("entrada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportarEntradaET", entradaParameter);
        }
    
        public virtual int OLD_sp_ConteoDiario_por_Aprobar(Nullable<int> usuarioId, string @base, string conteoDiario_ID, string grouping_label, Nullable<System.DateTime> fecConteo_ini, Nullable<System.DateTime> fecConteo_fin, Nullable<System.DateTime> fecCreacion_ini, Nullable<System.DateTime> fecCreacion_fin, string codDivision, string upc, string codEstilo)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var conteoDiario_IDParameter = conteoDiario_ID != null ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(string));
    
            var grouping_labelParameter = grouping_label != null ?
                new ObjectParameter("grouping_label", grouping_label) :
                new ObjectParameter("grouping_label", typeof(string));
    
            var fecConteo_iniParameter = fecConteo_ini.HasValue ?
                new ObjectParameter("FecConteo_ini", fecConteo_ini) :
                new ObjectParameter("FecConteo_ini", typeof(System.DateTime));
    
            var fecConteo_finParameter = fecConteo_fin.HasValue ?
                new ObjectParameter("FecConteo_fin", fecConteo_fin) :
                new ObjectParameter("FecConteo_fin", typeof(System.DateTime));
    
            var fecCreacion_iniParameter = fecCreacion_ini.HasValue ?
                new ObjectParameter("FecCreacion_ini", fecCreacion_ini) :
                new ObjectParameter("FecCreacion_ini", typeof(System.DateTime));
    
            var fecCreacion_finParameter = fecCreacion_fin.HasValue ?
                new ObjectParameter("FecCreacion_fin", fecCreacion_fin) :
                new ObjectParameter("FecCreacion_fin", typeof(System.DateTime));
    
            var codDivisionParameter = codDivision != null ?
                new ObjectParameter("CodDivision", codDivision) :
                new ObjectParameter("CodDivision", typeof(string));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            var codEstiloParameter = codEstilo != null ?
                new ObjectParameter("CodEstilo", codEstilo) :
                new ObjectParameter("CodEstilo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OLD_sp_ConteoDiario_por_Aprobar", usuarioIdParameter, baseParameter, conteoDiario_IDParameter, grouping_labelParameter, fecConteo_iniParameter, fecConteo_finParameter, fecCreacion_iniParameter, fecCreacion_finParameter, codDivisionParameter, upcParameter, codEstiloParameter);
        }
    
        public virtual int Procesa_Conteos_InvInicialPiso()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procesa_Conteos_InvInicialPiso");
        }
    
        public virtual int query_sop_68986(string fd, string fh)
        {
            var fdParameter = fd != null ?
                new ObjectParameter("fd", fd) :
                new ObjectParameter("fd", typeof(string));
    
            var fhParameter = fh != null ?
                new ObjectParameter("fh", fh) :
                new ObjectParameter("fh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("query_sop_68986", fdParameter, fhParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Buscar_ConteoDiario(Nullable<int> usuarioId, string @base, string conteoDiario_ID, string grouping_label, Nullable<System.DateTime> fecConteo_ini, Nullable<System.DateTime> fecConteo_fin, Nullable<System.DateTime> fecCreacion_ini, Nullable<System.DateTime> fecCreacion_fin, string codDivision, string upc, string codEstilo, string docEstatus, string docOrigen)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var conteoDiario_IDParameter = conteoDiario_ID != null ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(string));
    
            var grouping_labelParameter = grouping_label != null ?
                new ObjectParameter("grouping_label", grouping_label) :
                new ObjectParameter("grouping_label", typeof(string));
    
            var fecConteo_iniParameter = fecConteo_ini.HasValue ?
                new ObjectParameter("FecConteo_ini", fecConteo_ini) :
                new ObjectParameter("FecConteo_ini", typeof(System.DateTime));
    
            var fecConteo_finParameter = fecConteo_fin.HasValue ?
                new ObjectParameter("FecConteo_fin", fecConteo_fin) :
                new ObjectParameter("FecConteo_fin", typeof(System.DateTime));
    
            var fecCreacion_iniParameter = fecCreacion_ini.HasValue ?
                new ObjectParameter("FecCreacion_ini", fecCreacion_ini) :
                new ObjectParameter("FecCreacion_ini", typeof(System.DateTime));
    
            var fecCreacion_finParameter = fecCreacion_fin.HasValue ?
                new ObjectParameter("FecCreacion_fin", fecCreacion_fin) :
                new ObjectParameter("FecCreacion_fin", typeof(System.DateTime));
    
            var codDivisionParameter = codDivision != null ?
                new ObjectParameter("CodDivision", codDivision) :
                new ObjectParameter("CodDivision", typeof(string));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            var codEstiloParameter = codEstilo != null ?
                new ObjectParameter("CodEstilo", codEstilo) :
                new ObjectParameter("CodEstilo", typeof(string));
    
            var docEstatusParameter = docEstatus != null ?
                new ObjectParameter("DocEstatus", docEstatus) :
                new ObjectParameter("DocEstatus", typeof(string));
    
            var docOrigenParameter = docOrigen != null ?
                new ObjectParameter("DocOrigen", docOrigen) :
                new ObjectParameter("DocOrigen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Buscar_ConteoDiario", usuarioIdParameter, baseParameter, conteoDiario_IDParameter, grouping_labelParameter, fecConteo_iniParameter, fecConteo_finParameter, fecCreacion_iniParameter, fecCreacion_finParameter, codDivisionParameter, upcParameter, codEstiloParameter, docEstatusParameter, docOrigenParameter);
        }
    
        public virtual ObjectResult<sp_BuscarUpcenFoto_Result> sp_BuscarUpcenFoto(Nullable<int> documento, Nullable<int> @base, string upc)
        {
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(int));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscarUpcenFoto_Result>("sp_BuscarUpcenFoto", documentoParameter, baseParameter, upcParameter);
        }
    
        public virtual ObjectResult<sp_BuscarUpcenFotoPDT_Result> sp_BuscarUpcenFotoPDT(Nullable<int> @base, string upc)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscarUpcenFotoPDT_Result>("sp_BuscarUpcenFotoPDT", baseParameter, upcParameter);
        }
    
        public virtual int sp_CalculoEspecial_InvInicialPiso(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CalculoEspecial_InvInicialPiso", baseParameter, docInventarioParameter);
        }
    
        public virtual int sp_CalculoEspecial_InvInicialPiso_01(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CalculoEspecial_InvInicialPiso_01", baseParameter, docInventarioParameter);
        }
    
        public virtual int sp_CargarJerarquiasMerch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CargarJerarquiasMerch");
        }
    
        public virtual ObjectResult<sp_ConsultaConteoGenerado_Result> sp_ConsultaConteoGenerado(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaConteoGenerado_Result>("sp_ConsultaConteoGenerado", baseParameter, docInventarioParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaConteoGenerado_2023_Result> sp_ConsultaConteoGenerado_2023(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaConteoGenerado_2023_Result>("sp_ConsultaConteoGenerado_2023", baseParameter, docInventarioParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaConteoNOGenerado_Result> sp_ConsultaConteoNOGenerado(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaConteoNOGenerado_Result>("sp_ConsultaConteoNOGenerado", baseParameter, docInventarioParameter);
        }
    
        public virtual int sp_ConsultadeDiferencias(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConsultadeDiferencias", baseParameter, control_inventarioParameter);
        }
    
        public virtual int sp_ConsultaModificaciones(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConsultaModificaciones", baseParameter, control_inventarioParameter);
        }
    
        public virtual int sp_ConsultaModificaciones_2023(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConsultaModificaciones_2023", baseParameter, control_inventarioParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaNoSurtidos_Result> sp_ConsultaNoSurtidos(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaNoSurtidos_Result>("sp_ConsultaNoSurtidos", baseParameter, control_inventarioParameter);
        }
    
        public virtual ObjectResult<sp_ConteoDetallePorUbicacion_Result> sp_ConteoDetallePorUbicacion(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConteoDetallePorUbicacion_Result>("sp_ConteoDetallePorUbicacion", baseParameter, control_inventarioParameter);
        }
    
        public virtual ObjectResult<sp_ConteoDiario_Detalle_MovMERCH_Result> sp_ConteoDiario_Detalle_MovMERCH(Nullable<decimal> skuid, Nullable<int> @base, string str_desde, string str_hasta)
        {
            var skuidParameter = skuid.HasValue ?
                new ObjectParameter("skuid", skuid) :
                new ObjectParameter("skuid", typeof(decimal));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var str_desdeParameter = str_desde != null ?
                new ObjectParameter("str_desde", str_desde) :
                new ObjectParameter("str_desde", typeof(string));
    
            var str_hastaParameter = str_hasta != null ?
                new ObjectParameter("str_hasta", str_hasta) :
                new ObjectParameter("str_hasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConteoDiario_Detalle_MovMERCH_Result>("sp_ConteoDiario_Detalle_MovMERCH", skuidParameter, baseParameter, str_desdeParameter, str_hastaParameter);
        }
    
        public virtual int sp_ConteoDiario_Liberar_ByUser(string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_Liberar_ByUser", usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int sp_ConteoDiario_por_Analizar(Nullable<int> usuarioId, string @base, string conteoDiario_ID, string grouping_label, Nullable<System.DateTime> fecConteo_ini, Nullable<System.DateTime> fecConteo_fin, Nullable<System.DateTime> fecCreacion_ini, Nullable<System.DateTime> fecCreacion_fin, string codDivision, string upc, string codEstilo)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var conteoDiario_IDParameter = conteoDiario_ID != null ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(string));
    
            var grouping_labelParameter = grouping_label != null ?
                new ObjectParameter("grouping_label", grouping_label) :
                new ObjectParameter("grouping_label", typeof(string));
    
            var fecConteo_iniParameter = fecConteo_ini.HasValue ?
                new ObjectParameter("FecConteo_ini", fecConteo_ini) :
                new ObjectParameter("FecConteo_ini", typeof(System.DateTime));
    
            var fecConteo_finParameter = fecConteo_fin.HasValue ?
                new ObjectParameter("FecConteo_fin", fecConteo_fin) :
                new ObjectParameter("FecConteo_fin", typeof(System.DateTime));
    
            var fecCreacion_iniParameter = fecCreacion_ini.HasValue ?
                new ObjectParameter("FecCreacion_ini", fecCreacion_ini) :
                new ObjectParameter("FecCreacion_ini", typeof(System.DateTime));
    
            var fecCreacion_finParameter = fecCreacion_fin.HasValue ?
                new ObjectParameter("FecCreacion_fin", fecCreacion_fin) :
                new ObjectParameter("FecCreacion_fin", typeof(System.DateTime));
    
            var codDivisionParameter = codDivision != null ?
                new ObjectParameter("CodDivision", codDivision) :
                new ObjectParameter("CodDivision", typeof(string));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            var codEstiloParameter = codEstilo != null ?
                new ObjectParameter("CodEstilo", codEstilo) :
                new ObjectParameter("CodEstilo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_por_Analizar", usuarioIdParameter, baseParameter, conteoDiario_IDParameter, grouping_labelParameter, fecConteo_iniParameter, fecConteo_finParameter, fecCreacion_iniParameter, fecCreacion_finParameter, codDivisionParameter, upcParameter, codEstiloParameter);
        }
    
        public virtual int sp_ConteoDiario_por_Analizar_Asignar(Nullable<int> conteoDiario_ID, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_por_Analizar_Asignar", conteoDiario_IDParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int sp_ConteoDiario_por_Analizar_Liberar(Nullable<int> conteoDiario_Id, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IdParameter = conteoDiario_Id.HasValue ?
                new ObjectParameter("ConteoDiario_Id", conteoDiario_Id) :
                new ObjectParameter("ConteoDiario_Id", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_por_Analizar_Liberar", conteoDiario_IdParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int sp_ConteoDiario_por_Aprobar(Nullable<int> usuarioId, string @base, string conteoDiario_ID, string grouping_label, Nullable<System.DateTime> fecConteo_ini, Nullable<System.DateTime> fecConteo_fin, Nullable<System.DateTime> fecCreacion_ini, Nullable<System.DateTime> fecCreacion_fin, string codDivision, string upc, string codEstilo)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var conteoDiario_IDParameter = conteoDiario_ID != null ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(string));
    
            var grouping_labelParameter = grouping_label != null ?
                new ObjectParameter("grouping_label", grouping_label) :
                new ObjectParameter("grouping_label", typeof(string));
    
            var fecConteo_iniParameter = fecConteo_ini.HasValue ?
                new ObjectParameter("FecConteo_ini", fecConteo_ini) :
                new ObjectParameter("FecConteo_ini", typeof(System.DateTime));
    
            var fecConteo_finParameter = fecConteo_fin.HasValue ?
                new ObjectParameter("FecConteo_fin", fecConteo_fin) :
                new ObjectParameter("FecConteo_fin", typeof(System.DateTime));
    
            var fecCreacion_iniParameter = fecCreacion_ini.HasValue ?
                new ObjectParameter("FecCreacion_ini", fecCreacion_ini) :
                new ObjectParameter("FecCreacion_ini", typeof(System.DateTime));
    
            var fecCreacion_finParameter = fecCreacion_fin.HasValue ?
                new ObjectParameter("FecCreacion_fin", fecCreacion_fin) :
                new ObjectParameter("FecCreacion_fin", typeof(System.DateTime));
    
            var codDivisionParameter = codDivision != null ?
                new ObjectParameter("CodDivision", codDivision) :
                new ObjectParameter("CodDivision", typeof(string));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            var codEstiloParameter = codEstilo != null ?
                new ObjectParameter("CodEstilo", codEstilo) :
                new ObjectParameter("CodEstilo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_por_Aprobar", usuarioIdParameter, baseParameter, conteoDiario_IDParameter, grouping_labelParameter, fecConteo_iniParameter, fecConteo_finParameter, fecCreacion_iniParameter, fecCreacion_finParameter, codDivisionParameter, upcParameter, codEstiloParameter);
        }
    
        public virtual int sp_ConteoDiario_por_Aprobar_Asignar(Nullable<int> conteoDiario_ID, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_por_Aprobar_Asignar", conteoDiario_IDParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int sp_ConteoDiario_por_Aprobar_Liberar(Nullable<int> conteoDiario_Id, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IdParameter = conteoDiario_Id.HasValue ?
                new ObjectParameter("ConteoDiario_Id", conteoDiario_Id) :
                new ObjectParameter("ConteoDiario_Id", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_por_Aprobar_Liberar", conteoDiario_IdParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual int sp_ConteoDiario_por_AprobarMinMax(Nullable<int> usuarioId, string @base, string conteoDiario_ID, string grouping_label, Nullable<System.DateTime> fecConteo_ini, Nullable<System.DateTime> fecConteo_fin, Nullable<System.DateTime> fecCreacion_ini, Nullable<System.DateTime> fecCreacion_fin, string codDivision, string upc, string codEstilo)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var conteoDiario_IDParameter = conteoDiario_ID != null ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(string));
    
            var grouping_labelParameter = grouping_label != null ?
                new ObjectParameter("grouping_label", grouping_label) :
                new ObjectParameter("grouping_label", typeof(string));
    
            var fecConteo_iniParameter = fecConteo_ini.HasValue ?
                new ObjectParameter("FecConteo_ini", fecConteo_ini) :
                new ObjectParameter("FecConteo_ini", typeof(System.DateTime));
    
            var fecConteo_finParameter = fecConteo_fin.HasValue ?
                new ObjectParameter("FecConteo_fin", fecConteo_fin) :
                new ObjectParameter("FecConteo_fin", typeof(System.DateTime));
    
            var fecCreacion_iniParameter = fecCreacion_ini.HasValue ?
                new ObjectParameter("FecCreacion_ini", fecCreacion_ini) :
                new ObjectParameter("FecCreacion_ini", typeof(System.DateTime));
    
            var fecCreacion_finParameter = fecCreacion_fin.HasValue ?
                new ObjectParameter("FecCreacion_fin", fecCreacion_fin) :
                new ObjectParameter("FecCreacion_fin", typeof(System.DateTime));
    
            var codDivisionParameter = codDivision != null ?
                new ObjectParameter("CodDivision", codDivision) :
                new ObjectParameter("CodDivision", typeof(string));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            var codEstiloParameter = codEstilo != null ?
                new ObjectParameter("CodEstilo", codEstilo) :
                new ObjectParameter("CodEstilo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_por_AprobarMinMax", usuarioIdParameter, baseParameter, conteoDiario_IDParameter, grouping_labelParameter, fecConteo_iniParameter, fecConteo_finParameter, fecCreacion_iniParameter, fecCreacion_finParameter, codDivisionParameter, upcParameter, codEstiloParameter);
        }
    
        public virtual int sp_ConteoDiario_por_Cerrar(Nullable<int> usuarioId, string @base, string conteoDiario_ID, string grouping_label, Nullable<System.DateTime> fecConteo_ini, Nullable<System.DateTime> fecConteo_fin, Nullable<System.DateTime> fecCreacion_ini, Nullable<System.DateTime> fecCreacion_fin, string codDivision, string upc, string codEstilo)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var conteoDiario_IDParameter = conteoDiario_ID != null ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(string));
    
            var grouping_labelParameter = grouping_label != null ?
                new ObjectParameter("grouping_label", grouping_label) :
                new ObjectParameter("grouping_label", typeof(string));
    
            var fecConteo_iniParameter = fecConteo_ini.HasValue ?
                new ObjectParameter("FecConteo_ini", fecConteo_ini) :
                new ObjectParameter("FecConteo_ini", typeof(System.DateTime));
    
            var fecConteo_finParameter = fecConteo_fin.HasValue ?
                new ObjectParameter("FecConteo_fin", fecConteo_fin) :
                new ObjectParameter("FecConteo_fin", typeof(System.DateTime));
    
            var fecCreacion_iniParameter = fecCreacion_ini.HasValue ?
                new ObjectParameter("FecCreacion_ini", fecCreacion_ini) :
                new ObjectParameter("FecCreacion_ini", typeof(System.DateTime));
    
            var fecCreacion_finParameter = fecCreacion_fin.HasValue ?
                new ObjectParameter("FecCreacion_fin", fecCreacion_fin) :
                new ObjectParameter("FecCreacion_fin", typeof(System.DateTime));
    
            var codDivisionParameter = codDivision != null ?
                new ObjectParameter("CodDivision", codDivision) :
                new ObjectParameter("CodDivision", typeof(string));
    
            var upcParameter = upc != null ?
                new ObjectParameter("upc", upc) :
                new ObjectParameter("upc", typeof(string));
    
            var codEstiloParameter = codEstilo != null ?
                new ObjectParameter("CodEstilo", codEstilo) :
                new ObjectParameter("CodEstilo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConteoDiario_por_Cerrar", usuarioIdParameter, baseParameter, conteoDiario_IDParameter, grouping_labelParameter, fecConteo_iniParameter, fecConteo_finParameter, fecCreacion_iniParameter, fecCreacion_finParameter, codDivisionParameter, upcParameter, codEstiloParameter);
        }
    
        public virtual ObjectResult<sp_ConteoResumen_Result> sp_ConteoResumen(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConteoResumen_Result>("sp_ConteoResumen", baseParameter, docInventarioParameter);
        }
    
        public virtual int sp_Control_Inv_Upc_SinDoc(Nullable<int> @base, string control_inventario, string usuario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Control_Inv_Upc_SinDoc", baseParameter, control_inventarioParameter, usuarioParameter);
        }
    
        public virtual int sp_Control_Inventario_UpdAjuste(Nullable<int> @base, string control_inventario, string usuario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Control_Inventario_UpdAjuste", baseParameter, control_inventarioParameter, usuarioParameter);
        }
    
        public virtual int sp_Control_Inventario_UpdAjuste_2023(Nullable<int> @base, string control_inventario, string usuario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Control_Inventario_UpdAjuste_2023", baseParameter, control_inventarioParameter, usuarioParameter);
        }
    
        public virtual int sp_Control_Inventario_UpdConteo(Nullable<int> @base, string control_inventario, string usuario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Control_Inventario_UpdConteo", baseParameter, control_inventarioParameter, usuarioParameter);
        }
    
        public virtual int sp_Control_Inventario_UpdConteo_2023(Nullable<int> @base, string control_inventario, string usuario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Control_Inventario_UpdConteo_2023", baseParameter, control_inventarioParameter, usuarioParameter);
        }
    
        public virtual int sp_ControlesInvInicialPiso()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ControlesInvInicialPiso");
        }
    
        public virtual int sp_Crear_ConteoDiario(Nullable<System.DateTime> fecha_Conteo, string cod_Division, Nullable<int> id_Condicion, Nullable<int> cant_Usuarios, Nullable<int> upc_x_Usuario, string usuario, string grouping_label, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var fecha_ConteoParameter = fecha_Conteo.HasValue ?
                new ObjectParameter("Fecha_Conteo", fecha_Conteo) :
                new ObjectParameter("Fecha_Conteo", typeof(System.DateTime));
    
            var cod_DivisionParameter = cod_Division != null ?
                new ObjectParameter("Cod_Division", cod_Division) :
                new ObjectParameter("Cod_Division", typeof(string));
    
            var id_CondicionParameter = id_Condicion.HasValue ?
                new ObjectParameter("Id_Condicion", id_Condicion) :
                new ObjectParameter("Id_Condicion", typeof(int));
    
            var cant_UsuariosParameter = cant_Usuarios.HasValue ?
                new ObjectParameter("Cant_Usuarios", cant_Usuarios) :
                new ObjectParameter("Cant_Usuarios", typeof(int));
    
            var upc_x_UsuarioParameter = upc_x_Usuario.HasValue ?
                new ObjectParameter("Upc_x_Usuario", upc_x_Usuario) :
                new ObjectParameter("Upc_x_Usuario", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var grouping_labelParameter = grouping_label != null ?
                new ObjectParameter("grouping_label", grouping_label) :
                new ObjectParameter("grouping_label", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Crear_ConteoDiario", fecha_ConteoParameter, cod_DivisionParameter, id_CondicionParameter, cant_UsuariosParameter, upc_x_UsuarioParameter, usuarioParameter, grouping_labelParameter, oK, mensaje_error);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_DetalleSeguimientoConteo_Result> sp_DetalleSeguimientoConteo(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DetalleSeguimientoConteo_Result>("sp_DetalleSeguimientoConteo", baseParameter, control_inventarioParameter);
        }
    
        public virtual ObjectResult<sp_DetalleSeguimientoConteo_2023_Result> sp_DetalleSeguimientoConteo_2023(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DetalleSeguimientoConteo_2023_Result>("sp_DetalleSeguimientoConteo_2023", baseParameter, control_inventarioParameter);
        }
    
        public virtual ObjectResult<sp_DetalleUpcSinTeorico_Result> sp_DetalleUpcSinTeorico(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DetalleUpcSinTeorico_Result>("sp_DetalleUpcSinTeorico", baseParameter, control_inventarioParameter);
        }
    
        public virtual ObjectResult<sp_Doc_Control_GenerarArchivoSku_Result> sp_Doc_Control_GenerarArchivoSku(Nullable<int> documento, Nullable<int> @base)
        {
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(int));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Doc_Control_GenerarArchivoSku_Result>("sp_Doc_Control_GenerarArchivoSku", documentoParameter, baseParameter);
        }
    
        public virtual ObjectResult<sp_Doc_Control_GenerarArchivoUpc_Result> sp_Doc_Control_GenerarArchivoUpc(Nullable<int> documento, Nullable<int> @base)
        {
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(int));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Doc_Control_GenerarArchivoUpc_Result>("sp_Doc_Control_GenerarArchivoUpc", documentoParameter, baseParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_GetData_Analisis_ConteoDiario_Result> sp_GetData_Analisis_ConteoDiario(Nullable<int> conteoDiario_ID)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetData_Analisis_ConteoDiario_Result>("sp_GetData_Analisis_ConteoDiario", conteoDiario_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetData_Aprobacion_ConteoDiario_Result> sp_GetData_Aprobacion_ConteoDiario(Nullable<int> conteoDiario_ID)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetData_Aprobacion_ConteoDiario_Result>("sp_GetData_Aprobacion_ConteoDiario", conteoDiario_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetDetail_Ajuste_CSV_Result> sp_GetDetail_Ajuste_CSV(Nullable<int> ajuste_ID)
        {
            var ajuste_IDParameter = ajuste_ID.HasValue ?
                new ObjectParameter("Ajuste_ID", ajuste_ID) :
                new ObjectParameter("Ajuste_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDetail_Ajuste_CSV_Result>("sp_GetDetail_Ajuste_CSV", ajuste_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetDetail_ConteoDiario_Result> sp_GetDetail_ConteoDiario(Nullable<int> conteoDiario_ID)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDetail_ConteoDiario_Result>("sp_GetDetail_ConteoDiario", conteoDiario_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetHeader_Ajuste_CSV_Result> sp_GetHeader_Ajuste_CSV(Nullable<int> ajuste_ID)
        {
            var ajuste_IDParameter = ajuste_ID.HasValue ?
                new ObjectParameter("Ajuste_ID", ajuste_ID) :
                new ObjectParameter("Ajuste_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetHeader_Ajuste_CSV_Result>("sp_GetHeader_Ajuste_CSV", ajuste_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetHeader_ConteoDiario_Result> sp_GetHeader_ConteoDiario(Nullable<int> conteoDiario_ID)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetHeader_ConteoDiario_Result>("sp_GetHeader_ConteoDiario", conteoDiario_IDParameter);
        }
    
        public virtual int sp_GetSecuenciaArchivo_Ajustes_Inventario_MERCH(string usuario, ObjectParameter num_documento, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSecuenciaArchivo_Ajustes_Inventario_MERCH", usuarioParameter, num_documento, oK, mensaje_error);
        }
    
        public virtual int sp_Grabar_Analisis_ConteoDiario(Nullable<int> conteoDiario_ID, Nullable<int> conteoDiario_Analisis_ID, Nullable<int> cantidad, Nullable<bool> ajustar, string motivo, string comentario, string usuario, ObjectParameter oK, ObjectParameter mensaje_error)
        {
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var conteoDiario_Analisis_IDParameter = conteoDiario_Analisis_ID.HasValue ?
                new ObjectParameter("ConteoDiario_Analisis_ID", conteoDiario_Analisis_ID) :
                new ObjectParameter("ConteoDiario_Analisis_ID", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var ajustarParameter = ajustar.HasValue ?
                new ObjectParameter("ajustar", ajustar) :
                new ObjectParameter("ajustar", typeof(bool));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Grabar_Analisis_ConteoDiario", conteoDiario_IDParameter, conteoDiario_Analisis_IDParameter, cantidadParameter, ajustarParameter, motivoParameter, comentarioParameter, usuarioParameter, oK, mensaje_error);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_InventarioCalculado_Result> sp_InventarioCalculado(string docInventario, Nullable<int> @base)
        {
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InventarioCalculado_Result>("sp_InventarioCalculado", docInventarioParameter, baseParameter);
        }
    
        public virtual int sp_nuevo_AnalisisConteo(Nullable<int> @base, Nullable<int> conteo)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var conteoParameter = conteo.HasValue ?
                new ObjectParameter("conteo", conteo) :
                new ObjectParameter("conteo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_nuevo_AnalisisConteo", baseParameter, conteoParameter);
        }
    
        public virtual ObjectResult<sp_Obtener_Conteos_a_Modificar_Result> sp_Obtener_Conteos_a_Modificar(Nullable<int> @base, string control_inventario, Nullable<decimal> skuid)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var skuidParameter = skuid.HasValue ?
                new ObjectParameter("skuid", skuid) :
                new ObjectParameter("skuid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Obtener_Conteos_a_Modificar_Result>("sp_Obtener_Conteos_a_Modificar", baseParameter, control_inventarioParameter, skuidParameter);
        }
    
        public virtual ObjectResult<sp_Obtener_Conteos_Total_Result> sp_Obtener_Conteos_Total(Nullable<int> @base, string control_inventario, Nullable<decimal> skuid)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var skuidParameter = skuid.HasValue ?
                new ObjectParameter("skuid", skuid) :
                new ObjectParameter("skuid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Obtener_Conteos_Total_Result>("sp_Obtener_Conteos_Total", baseParameter, control_inventarioParameter, skuidParameter);
        }
    
        public virtual int sp_ObtenerInvInicialPiso(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ObtenerInvInicialPiso", baseParameter, docInventarioParameter);
        }
    
        public virtual ObjectResult<sp_PorcCostoPisoDeposito_Result> sp_PorcCostoPisoDeposito(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PorcCostoPisoDeposito_Result>("sp_PorcCostoPisoDeposito", baseParameter, control_inventarioParameter);
        }
    
        public virtual ObjectResult<sp_PorcCostoPisoDeposito_2023_Result> sp_PorcCostoPisoDeposito_2023(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PorcCostoPisoDeposito_2023_Result>("sp_PorcCostoPisoDeposito_2023", baseParameter, control_inventarioParameter);
        }
    
        public virtual int sp_PorcentajeNoSurtidos(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PorcentajeNoSurtidos", baseParameter, control_inventarioParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_Rep_ConteosDiarios_Cerrados(Nullable<System.DateTime> fecConteo_ini, Nullable<System.DateTime> fecConteo_fin, Nullable<System.DateTime> fecCierre_ini, Nullable<System.DateTime> fecCierre_fin, Nullable<int> conteoDiario_ID, Nullable<int> usuarioId)
        {
            var fecConteo_iniParameter = fecConteo_ini.HasValue ?
                new ObjectParameter("FecConteo_ini", fecConteo_ini) :
                new ObjectParameter("FecConteo_ini", typeof(System.DateTime));
    
            var fecConteo_finParameter = fecConteo_fin.HasValue ?
                new ObjectParameter("FecConteo_fin", fecConteo_fin) :
                new ObjectParameter("FecConteo_fin", typeof(System.DateTime));
    
            var fecCierre_iniParameter = fecCierre_ini.HasValue ?
                new ObjectParameter("FecCierre_ini", fecCierre_ini) :
                new ObjectParameter("FecCierre_ini", typeof(System.DateTime));
    
            var fecCierre_finParameter = fecCierre_fin.HasValue ?
                new ObjectParameter("FecCierre_fin", fecCierre_fin) :
                new ObjectParameter("FecCierre_fin", typeof(System.DateTime));
    
            var conteoDiario_IDParameter = conteoDiario_ID.HasValue ?
                new ObjectParameter("ConteoDiario_ID", conteoDiario_ID) :
                new ObjectParameter("ConteoDiario_ID", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Rep_ConteosDiarios_Cerrados", fecConteo_iniParameter, fecConteo_finParameter, fecCierre_iniParameter, fecCierre_finParameter, conteoDiario_IDParameter, usuarioIdParameter);
        }
    
        public virtual ObjectResult<sp_RepUbicacionesInv0MERCH_Result> sp_RepUbicacionesInv0MERCH(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RepUbicacionesInv0MERCH_Result>("sp_RepUbicacionesInv0MERCH", baseParameter, docInventarioParameter);
        }
    
        public virtual ObjectResult<sp_SeguimientoConteo_Result> sp_SeguimientoConteo(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SeguimientoConteo_Result>("sp_SeguimientoConteo", baseParameter, docInventarioParameter);
        }
    
        public virtual ObjectResult<sp_SeguimientoConteo_2023_Result> sp_SeguimientoConteo_2023(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SeguimientoConteo_2023_Result>("sp_SeguimientoConteo_2023", baseParameter, docInventarioParameter);
        }
    
        public virtual int sp_Sugerir_Conteo_Diario(Nullable<System.DateTime> prmFConteo, string prmDivision, Nullable<int> prmCondicion, Nullable<int> prmCantUsers)
        {
            var prmFConteoParameter = prmFConteo.HasValue ?
                new ObjectParameter("prmFConteo", prmFConteo) :
                new ObjectParameter("prmFConteo", typeof(System.DateTime));
    
            var prmDivisionParameter = prmDivision != null ?
                new ObjectParameter("prmDivision", prmDivision) :
                new ObjectParameter("prmDivision", typeof(string));
    
            var prmCondicionParameter = prmCondicion.HasValue ?
                new ObjectParameter("prmCondicion", prmCondicion) :
                new ObjectParameter("prmCondicion", typeof(int));
    
            var prmCantUsersParameter = prmCantUsers.HasValue ?
                new ObjectParameter("prmCantUsers", prmCantUsers) :
                new ObjectParameter("prmCantUsers", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sugerir_Conteo_Diario", prmFConteoParameter, prmDivisionParameter, prmCondicionParameter, prmCantUsersParameter);
        }
    
        public virtual int sp_UbicacionesSku_ConteoDeposito(Nullable<int> @base, string docInventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var docInventarioParameter = docInventario != null ?
                new ObjectParameter("DocInventario", docInventario) :
                new ObjectParameter("DocInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UbicacionesSku_ConteoDeposito", baseParameter, docInventarioParameter);
        }
    
        public virtual ObjectResult<sp_UpcSinTeorico_Result> sp_UpcSinTeorico(Nullable<int> @base, string control_inventario)
        {
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpcSinTeorico_Result>("sp_UpcSinTeorico", baseParameter, control_inventarioParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> sp_UPDATE_STATISTICS_Inventario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("sp_UPDATE_STATISTICS_Inventario");
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spAjustesEliminarHaceUnaSemana(Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAjustesEliminarHaceUnaSemana", idbaseParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spAjustesPDT_Result> spAjustesPDT(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAjustesPDT_Result>("spAjustesPDT", idbaseParameter);
        }
    
        public virtual ObjectResult<spAjustesPDT1_Result> spAjustesPDT1(Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAjustesPDT1_Result>("spAjustesPDT1", idbaseParameter, fechaParameter);
        }
    
        public virtual int spAjustesProveedoresNacionalesInsertar(Nullable<int> idajuste, string proveedor)
        {
            var idajusteParameter = idajuste.HasValue ?
                new ObjectParameter("idajuste", idajuste) :
                new ObjectParameter("idajuste", typeof(int));
    
            var proveedorParameter = proveedor != null ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAjustesProveedoresNacionalesInsertar", idajusteParameter, proveedorParameter);
        }
    
        public virtual ObjectResult<spAppAdminConteoDiarioPorBaseId_Result> spAppAdminConteoDiarioPorBaseId(Nullable<int> baseId)
        {
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppAdminConteoDiarioPorBaseId_Result>("spAppAdminConteoDiarioPorBaseId", baseIdParameter);
        }
    
        public virtual ObjectResult<spAppAdminConteoDiarioTareasLiberarPorTareaId_Result> spAppAdminConteoDiarioTareasLiberarPorTareaId(Nullable<int> conteoDiarioId, Nullable<int> tareaConteoDiarioId, string usuarioId)
        {
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tareaConteoDiarioIdParameter = tareaConteoDiarioId.HasValue ?
                new ObjectParameter("TareaConteoDiarioId", tareaConteoDiarioId) :
                new ObjectParameter("TareaConteoDiarioId", typeof(int));
    
            var usuarioIdParameter = usuarioId != null ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppAdminConteoDiarioTareasLiberarPorTareaId_Result>("spAppAdminConteoDiarioTareasLiberarPorTareaId", conteoDiarioIdParameter, tareaConteoDiarioIdParameter, usuarioIdParameter);
        }
    
        public virtual ObjectResult<spAppAdminConteoDiarioTareasLiberarPorTareaIds_Result> spAppAdminConteoDiarioTareasLiberarPorTareaIds(string conteoDiarioId, string tareaConteoDiarioIds, string usuarioId)
        {
            var conteoDiarioIdParameter = conteoDiarioId != null ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(string));
    
            var tareaConteoDiarioIdsParameter = tareaConteoDiarioIds != null ?
                new ObjectParameter("TareaConteoDiarioIds", tareaConteoDiarioIds) :
                new ObjectParameter("TareaConteoDiarioIds", typeof(string));
    
            var usuarioIdParameter = usuarioId != null ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppAdminConteoDiarioTareasLiberarPorTareaIds_Result>("spAppAdminConteoDiarioTareasLiberarPorTareaIds", conteoDiarioIdParameter, tareaConteoDiarioIdsParameter, usuarioIdParameter);
        }
    
        public virtual int spAppAdminConteoDiarioTareasPorConteoDiarioId(Nullable<int> conteoDiarioId, string tipoUbicacion)
        {
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppAdminConteoDiarioTareasPorConteoDiarioId", conteoDiarioIdParameter, tipoUbicacionParameter);
        }
    
        public virtual int spAppConteoCiclico_Conteo_INS(Nullable<int> conteoCiclicoId, string uPC, Nullable<int> cantidad, Nullable<int> usuarioId, string tipoUbicacion)
        {
            var conteoCiclicoIdParameter = conteoCiclicoId.HasValue ?
                new ObjectParameter("ConteoCiclicoId", conteoCiclicoId) :
                new ObjectParameter("ConteoCiclicoId", typeof(int));
    
            var uPCParameter = uPC != null ?
                new ObjectParameter("UPC", uPC) :
                new ObjectParameter("UPC", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppConteoCiclico_Conteo_INS", conteoCiclicoIdParameter, uPCParameter, cantidadParameter, usuarioIdParameter, tipoUbicacionParameter);
        }
    
        public virtual ObjectResult<spAppConteoCiclico_DivisionesZonas_INS_Result> spAppConteoCiclico_DivisionesZonas_INS(Nullable<int> conteoCiclicoId, string zona, string ubicacion, string tipoUbicacion, Nullable<int> usuarioId)
        {
            var conteoCiclicoIdParameter = conteoCiclicoId.HasValue ?
                new ObjectParameter("ConteoCiclicoId", conteoCiclicoId) :
                new ObjectParameter("ConteoCiclicoId", typeof(int));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("Zona", zona) :
                new ObjectParameter("Zona", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoCiclico_DivisionesZonas_INS_Result>("spAppConteoCiclico_DivisionesZonas_INS", conteoCiclicoIdParameter, zonaParameter, ubicacionParameter, tipoUbicacionParameter, usuarioIdParameter);
        }
    
        public virtual ObjectResult<spAppConteoCiclicoPorBaseId_Result> spAppConteoCiclicoPorBaseId(Nullable<int> baseId)
        {
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoCiclicoPorBaseId_Result>("spAppConteoCiclicoPorBaseId", baseIdParameter);
        }
    
        public virtual int spAppConteoDiario_INS_Conteo(string formaConteo, string uPC, Nullable<decimal> skuId, Nullable<int> baseId, Nullable<int> conteoDiarioId, Nullable<int> tareaConteoDiarioId, string usuario, Nullable<int> tipoIdConteo, string tipoUbicacion, string ubicacion, Nullable<decimal> cantidad, ObjectParameter oK, ObjectParameter tipoError, ObjectParameter mensajeError, ObjectParameter oUT_Talla, ObjectParameter oUT_Color, ObjectParameter oUT_Cantidad, ObjectParameter oUT_SkuId, ObjectParameter oUT_TotalContadoPorEstilo, ObjectParameter oUT_UPCExiste, ObjectParameter oUT_DiferenciasCantidadUbicaciones, ObjectParameter oUT_DiferenciasCantidadConteo)
        {
            var formaConteoParameter = formaConteo != null ?
                new ObjectParameter("FormaConteo", formaConteo) :
                new ObjectParameter("FormaConteo", typeof(string));
    
            var uPCParameter = uPC != null ?
                new ObjectParameter("UPC", uPC) :
                new ObjectParameter("UPC", typeof(string));
    
            var skuIdParameter = skuId.HasValue ?
                new ObjectParameter("SkuId", skuId) :
                new ObjectParameter("SkuId", typeof(decimal));
    
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tareaConteoDiarioIdParameter = tareaConteoDiarioId.HasValue ?
                new ObjectParameter("TareaConteoDiarioId", tareaConteoDiarioId) :
                new ObjectParameter("TareaConteoDiarioId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var tipoIdConteoParameter = tipoIdConteo.HasValue ?
                new ObjectParameter("TipoIdConteo", tipoIdConteo) :
                new ObjectParameter("TipoIdConteo", typeof(int));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppConteoDiario_INS_Conteo", formaConteoParameter, uPCParameter, skuIdParameter, baseIdParameter, conteoDiarioIdParameter, tareaConteoDiarioIdParameter, usuarioParameter, tipoIdConteoParameter, tipoUbicacionParameter, ubicacionParameter, cantidadParameter, oK, tipoError, mensajeError, oUT_Talla, oUT_Color, oUT_Cantidad, oUT_SkuId, oUT_TotalContadoPorEstilo, oUT_UPCExiste, oUT_DiferenciasCantidadUbicaciones, oUT_DiferenciasCantidadConteo);
        }
    
        public virtual ObjectResult<spAppConteoDiario_INS_Conteo_EXEC_Result> spAppConteoDiario_INS_Conteo_EXEC(string formaConteo, string uPC, Nullable<decimal> skuId, Nullable<int> baseId, Nullable<int> conteoDiarioId, Nullable<int> tareaConteoDiarioId, string usuario, Nullable<int> tipoIdConteo, string tipoUbicacion, string ubicacion, Nullable<decimal> cantidad)
        {
            var formaConteoParameter = formaConteo != null ?
                new ObjectParameter("FormaConteo", formaConteo) :
                new ObjectParameter("FormaConteo", typeof(string));
    
            var uPCParameter = uPC != null ?
                new ObjectParameter("UPC", uPC) :
                new ObjectParameter("UPC", typeof(string));
    
            var skuIdParameter = skuId.HasValue ?
                new ObjectParameter("SkuId", skuId) :
                new ObjectParameter("SkuId", typeof(decimal));
    
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tareaConteoDiarioIdParameter = tareaConteoDiarioId.HasValue ?
                new ObjectParameter("TareaConteoDiarioId", tareaConteoDiarioId) :
                new ObjectParameter("TareaConteoDiarioId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var tipoIdConteoParameter = tipoIdConteo.HasValue ?
                new ObjectParameter("TipoIdConteo", tipoIdConteo) :
                new ObjectParameter("TipoIdConteo", typeof(int));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiario_INS_Conteo_EXEC_Result>("spAppConteoDiario_INS_Conteo_EXEC", formaConteoParameter, uPCParameter, skuIdParameter, baseIdParameter, conteoDiarioIdParameter, tareaConteoDiarioIdParameter, usuarioParameter, tipoIdConteoParameter, tipoUbicacionParameter, ubicacionParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<spAppConteoDiarioCrearTarea_Result> spAppConteoDiarioCrearTarea(Nullable<int> conteoDiarioId, string tipoUbicacion, string uPC, string usuario)
        {
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var uPCParameter = uPC != null ?
                new ObjectParameter("UPC", uPC) :
                new ObjectParameter("UPC", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiarioCrearTarea_Result>("spAppConteoDiarioCrearTarea", conteoDiarioIdParameter, tipoUbicacionParameter, uPCParameter, usuarioParameter);
        }
    
        public virtual int spAppConteoDiarioEstiloTovaPorTareaId(Nullable<int> conteoDiarioId, Nullable<int> tareaConteoDiarioId, string tipoUbicacion)
        {
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tareaConteoDiarioIdParameter = tareaConteoDiarioId.HasValue ?
                new ObjectParameter("TareaConteoDiarioId", tareaConteoDiarioId) :
                new ObjectParameter("TareaConteoDiarioId", typeof(int));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppConteoDiarioEstiloTovaPorTareaId", conteoDiarioIdParameter, tareaConteoDiarioIdParameter, tipoUbicacionParameter);
        }
    
        public virtual ObjectResult<spAppConteoDiarioPorBaseId_Result> spAppConteoDiarioPorBaseId(Nullable<int> baseId)
        {
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiarioPorBaseId_Result>("spAppConteoDiarioPorBaseId", baseIdParameter);
        }
    
        public virtual int spAppConteoDiarioTareaCambiarEstado(Nullable<int> conteoDiarioId, Nullable<int> tareaConteoDiarioId, string tipoOperacion, string usuario, ObjectParameter oK, ObjectParameter mensajeError)
        {
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tareaConteoDiarioIdParameter = tareaConteoDiarioId.HasValue ?
                new ObjectParameter("TareaConteoDiarioId", tareaConteoDiarioId) :
                new ObjectParameter("TareaConteoDiarioId", typeof(int));
    
            var tipoOperacionParameter = tipoOperacion != null ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppConteoDiarioTareaCambiarEstado", conteoDiarioIdParameter, tareaConteoDiarioIdParameter, tipoOperacionParameter, usuarioParameter, oK, mensajeError);
        }
    
        public virtual ObjectResult<spAppConteoDiarioTareaCambiarEstado_EXEC_Result> spAppConteoDiarioTareaCambiarEstado_EXEC(Nullable<int> conteoDiarioId, Nullable<int> tareaConteoDiarioId, string tipoOperacion, string usuario)
        {
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tareaConteoDiarioIdParameter = tareaConteoDiarioId.HasValue ?
                new ObjectParameter("TareaConteoDiarioId", tareaConteoDiarioId) :
                new ObjectParameter("TareaConteoDiarioId", typeof(int));
    
            var tipoOperacionParameter = tipoOperacion != null ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiarioTareaCambiarEstado_EXEC_Result>("spAppConteoDiarioTareaCambiarEstado_EXEC", conteoDiarioIdParameter, tareaConteoDiarioIdParameter, tipoOperacionParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<spAppConteoDiarioTareasLiberarPorUsuarioId_Result> spAppConteoDiarioTareasLiberarPorUsuarioId(string usuarioId)
        {
            var usuarioIdParameter = usuarioId != null ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiarioTareasLiberarPorUsuarioId_Result>("spAppConteoDiarioTareasLiberarPorUsuarioId", usuarioIdParameter);
        }
    
        public virtual int spAppConteoDiarioTareasPorConteoDiarioId(Nullable<int> conteoDiarioId, string usuarioAsignado, string tipoUbicacion, string ordenRegistro, Nullable<int> baseId)
        {
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var usuarioAsignadoParameter = usuarioAsignado != null ?
                new ObjectParameter("UsuarioAsignado", usuarioAsignado) :
                new ObjectParameter("UsuarioAsignado", typeof(string));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var ordenRegistroParameter = ordenRegistro != null ?
                new ObjectParameter("OrdenRegistro", ordenRegistro) :
                new ObjectParameter("OrdenRegistro", typeof(string));
    
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppConteoDiarioTareasPorConteoDiarioId", conteoDiarioIdParameter, usuarioAsignadoParameter, tipoUbicacionParameter, ordenRegistroParameter, baseIdParameter);
        }
    
        public virtual ObjectResult<spAppConteoDiarioUbicacion_DEL_Result> spAppConteoDiarioUbicacion_DEL(Nullable<int> baseId, Nullable<decimal> skuId, string ubicacion, string usuario)
        {
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            var skuIdParameter = skuId.HasValue ?
                new ObjectParameter("SkuId", skuId) :
                new ObjectParameter("SkuId", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiarioUbicacion_DEL_Result>("spAppConteoDiarioUbicacion_DEL", baseIdParameter, skuIdParameter, ubicacionParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<spAppConteoDiarioUbicacion_GET_Result> spAppConteoDiarioUbicacion_GET(string tipoDatos, Nullable<int> baseId, Nullable<decimal> skuId, Nullable<int> estiloTovaId)
        {
            var tipoDatosParameter = tipoDatos != null ?
                new ObjectParameter("TipoDatos", tipoDatos) :
                new ObjectParameter("TipoDatos", typeof(string));
    
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            var skuIdParameter = skuId.HasValue ?
                new ObjectParameter("SkuId", skuId) :
                new ObjectParameter("SkuId", typeof(decimal));
    
            var estiloTovaIdParameter = estiloTovaId.HasValue ?
                new ObjectParameter("EstiloTovaId", estiloTovaId) :
                new ObjectParameter("EstiloTovaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiarioUbicacion_GET_Result>("spAppConteoDiarioUbicacion_GET", tipoDatosParameter, baseIdParameter, skuIdParameter, estiloTovaIdParameter);
        }
    
        public virtual ObjectResult<spAppConteoDiarioUbicacion_INS_Result> spAppConteoDiarioUbicacion_INS(Nullable<int> baseId, Nullable<decimal> skuId, string ubicacion, string usuario, Nullable<int> tareaConteoDiarioId)
        {
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            var skuIdParameter = skuId.HasValue ?
                new ObjectParameter("SkuId", skuId) :
                new ObjectParameter("SkuId", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var tareaConteoDiarioIdParameter = tareaConteoDiarioId.HasValue ?
                new ObjectParameter("TareaConteoDiarioId", tareaConteoDiarioId) :
                new ObjectParameter("TareaConteoDiarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiarioUbicacion_INS_Result>("spAppConteoDiarioUbicacion_INS", baseIdParameter, skuIdParameter, ubicacionParameter, usuarioParameter, tareaConteoDiarioIdParameter);
        }
    
        public virtual int spAppConteoDiarioUPCporSku(Nullable<decimal> skuId)
        {
            var skuIdParameter = skuId.HasValue ?
                new ObjectParameter("SkuId", skuId) :
                new ObjectParameter("SkuId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppConteoDiarioUPCporSku", skuIdParameter);
        }
    
        public virtual ObjectResult<spAppConteoDiarioValidarUPC_Result> spAppConteoDiarioValidarUPC(string upc, Nullable<int> tareaDeConteoDiarioId, Nullable<int> conteoDiarioId)
        {
            var upcParameter = upc != null ?
                new ObjectParameter("Upc", upc) :
                new ObjectParameter("Upc", typeof(string));
    
            var tareaDeConteoDiarioIdParameter = tareaDeConteoDiarioId.HasValue ?
                new ObjectParameter("TareaDeConteoDiarioId", tareaDeConteoDiarioId) :
                new ObjectParameter("TareaDeConteoDiarioId", typeof(int));
    
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoDiarioValidarUPC_Result>("spAppConteoDiarioValidarUPC", upcParameter, tareaDeConteoDiarioIdParameter, conteoDiarioIdParameter);
        }
    
        public virtual int spAppConteoFinalizadosActualizarTareaId(Nullable<int> conteoDiarioId, Nullable<int> tareaConteoDiarioId, Nullable<int> cantidad, string usuarioAsignado)
        {
            var conteoDiarioIdParameter = conteoDiarioId.HasValue ?
                new ObjectParameter("ConteoDiarioId", conteoDiarioId) :
                new ObjectParameter("ConteoDiarioId", typeof(int));
    
            var tareaConteoDiarioIdParameter = tareaConteoDiarioId.HasValue ?
                new ObjectParameter("TareaConteoDiarioId", tareaConteoDiarioId) :
                new ObjectParameter("TareaConteoDiarioId", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var usuarioAsignadoParameter = usuarioAsignado != null ?
                new ObjectParameter("UsuarioAsignado", usuarioAsignado) :
                new ObjectParameter("UsuarioAsignado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppConteoFinalizadosActualizarTareaId", conteoDiarioIdParameter, tareaConteoDiarioIdParameter, cantidadParameter, usuarioAsignadoParameter);
        }
    
        public virtual ObjectResult<spAppConteoFinalizadosValidarUPC_Result> spAppConteoFinalizadosValidarUPC(string upc, Nullable<int> baseId)
        {
            var upcParameter = upc != null ?
                new ObjectParameter("Upc", upc) :
                new ObjectParameter("Upc", typeof(string));
    
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAppConteoFinalizadosValidarUPC_Result>("spAppConteoFinalizadosValidarUPC", upcParameter, baseIdParameter);
        }
    
        public virtual int spAppVPreciosObtenerPrecio(string uPC, Nullable<int> baseId)
        {
            var uPCParameter = uPC != null ?
                new ObjectParameter("UPC", uPC) :
                new ObjectParameter("UPC", typeof(string));
    
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppVPreciosObtenerPrecio", uPCParameter, baseIdParameter);
        }
    
        public virtual ObjectResult<spB0VsSIB_Result> spB0VsSIB(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spB0VsSIB_Result>("spB0VsSIB", fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<spBultos_Carga_Descarga_PosteriorConsulta_Result> spBultos_Carga_Descarga_PosteriorConsulta(string bulto)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBultos_Carga_Descarga_PosteriorConsulta_Result>("spBultos_Carga_Descarga_PosteriorConsulta", bultoParameter);
        }
    
        public virtual int spBultosNoIdentificadosActualizar(string ctrlcarga)
        {
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBultosNoIdentificadosActualizar", ctrlcargaParameter);
        }
    
        public virtual int spBultosNoIdentificadosEliminarSinCarga()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBultosNoIdentificadosEliminarSinCarga");
        }
    
        public virtual int spBultosNoIdentificadosInsertar(string bulto, string ctrlcarga, Nullable<int> idbase)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBultosNoIdentificadosInsertar", bultoParameter, ctrlcargaParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<spBultosNoIdentificadosPorControl_Result> spBultosNoIdentificadosPorControl(string ctrlcarga)
        {
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBultosNoIdentificadosPorControl_Result>("spBultosNoIdentificadosPorControl", ctrlcargaParameter);
        }
    
        public virtual ObjectResult<spBultosNoIdentificadosPorControlEntreFechas_Result> spBultosNoIdentificadosPorControlEntreFechas(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBultosNoIdentificadosPorControlEntreFechas_Result>("spBultosNoIdentificadosPorControlEntreFechas", fecha1Parameter, fecha2Parameter);
        }
    
        public virtual int spBultosSinMaestroArticulosInsertar(string bulto, string ctrlcarga, Nullable<int> idbase, string referencia)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var referenciaParameter = referencia != null ?
                new ObjectParameter("referencia", referencia) :
                new ObjectParameter("referencia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBultosSinMaestroArticulosInsertar", bultoParameter, ctrlcargaParameter, idbaseParameter, referenciaParameter);
        }
    
        public virtual int spBultosSinMaestroArticulosMarcarPorBulto(string bulto)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBultosSinMaestroArticulosMarcarPorBulto", bultoParameter);
        }
    
        public virtual ObjectResult<spBultosSinMaestroArticulosPorBase_Result> spBultosSinMaestroArticulosPorBase(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBultosSinMaestroArticulosPorBase_Result>("spBultosSinMaestroArticulosPorBase", idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spCantidadGuardadaEnDeposito(Nullable<int> idbase, string identificador, string codbarra)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCantidadGuardadaEnDeposito", idbaseParameter, identificadorParameter, codbarraParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spCantidadGuardadaEnPiso(Nullable<int> idbase, string identificador, string codbarra)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCantidadGuardadaEnPiso", idbaseParameter, identificadorParameter, codbarraParameter);
        }
    
        public virtual int spComplementosMuebleriaInsertar(string codbar, string refe, Nullable<int> cantidad, string refmas, Nullable<int> idbase, Nullable<int> idusuario, Nullable<System.DateTime> fecha)
        {
            var codbarParameter = codbar != null ?
                new ObjectParameter("codbar", codbar) :
                new ObjectParameter("codbar", typeof(string));
    
            var refeParameter = refe != null ?
                new ObjectParameter("refe", refe) :
                new ObjectParameter("refe", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var refmasParameter = refmas != null ?
                new ObjectParameter("refmas", refmas) :
                new ObjectParameter("refmas", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spComplementosMuebleriaInsertar", codbarParameter, refeParameter, cantidadParameter, refmasParameter, idbaseParameter, idusuarioParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spConsistenciaIdentificadorDeposito_Result> spConsistenciaIdentificadorDeposito(string identificador, string codbarra, Nullable<int> idbase)
        {
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsistenciaIdentificadorDeposito_Result>("spConsistenciaIdentificadorDeposito", identificadorParameter, codbarraParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<spConsistenciaIdentificadorPiso_Result> spConsistenciaIdentificadorPiso(string identificador, string codbarra, Nullable<int> idbase)
        {
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsistenciaIdentificadorPiso_Result>("spConsistenciaIdentificadorPiso", identificadorParameter, codbarraParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<spConsultarAvanceAuditoria_Result> spConsultarAvanceAuditoria(string division, Nullable<int> idbase, string tipo, string zona, Nullable<System.DateTime> fecha)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarAvanceAuditoria_Result>("spConsultarAvanceAuditoria", divisionParameter, idbaseParameter, tipoParameter, zonaParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spConsultarAvanceInventario_Result> spConsultarAvanceInventario(string division, Nullable<int> idbase, string tipo, string zona)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarAvanceInventario_Result>("spConsultarAvanceInventario", divisionParameter, idbaseParameter, tipoParameter, zonaParameter);
        }
    
        public virtual int spConteosConsulta(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, string ubicacion)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spConteosConsulta", fecha1Parameter, fecha2Parameter, ubicacionParameter);
        }
    
        public virtual ObjectResult<spControlesCargaEnviadosConsulta_Result> spControlesCargaEnviadosConsulta(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spControlesCargaEnviadosConsulta_Result>("spControlesCargaEnviadosConsulta", idbaseParameter);
        }
    
        public virtual int spControlesCargaEnviadosInsertar(string ctrlcarga, Nullable<int> idbase)
        {
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spControlesCargaEnviadosInsertar", ctrlcargaParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spCostoInventarioBaseDepartamentoFechaEntradasAnterioraTomaEntradasTemporales(Nullable<int> iddepar, Nullable<int> idbase, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fechacarga)
        {
            var iddeparParameter = iddepar.HasValue ?
                new ObjectParameter("iddepar", iddepar) :
                new ObjectParameter("iddepar", typeof(int));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fechacargaParameter = fechacarga.HasValue ?
                new ObjectParameter("fechacarga", fechacarga) :
                new ObjectParameter("fechacarga", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spCostoInventarioBaseDepartamentoFechaEntradasAnterioraTomaEntradasTemporales", iddeparParameter, idbaseParameter, fechaParameter, fechacargaParameter);
        }
    
        public virtual ObjectResult<spDepartamentosZonasConsulta_Result> spDepartamentosZonasConsulta(string depar, string zona, string ubic, Nullable<int> idbase)
        {
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDepartamentosZonasConsulta_Result>("spDepartamentosZonasConsulta", deparParameter, zonaParameter, ubicParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<spDepartamentosZonasConsultaPorDepartamento_Result> spDepartamentosZonasConsultaPorDepartamento(string depar, Nullable<int> idbase, string tipo)
        {
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDepartamentosZonasConsultaPorDepartamento_Result>("spDepartamentosZonasConsultaPorDepartamento", deparParameter, idbaseParameter, tipoParameter);
        }
    
        public virtual int spDepartamentosZonasEliminar(string depar, string zona, string ubic, Nullable<int> idbase)
        {
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDepartamentosZonasEliminar", deparParameter, zonaParameter, ubicParameter, idbaseParameter);
        }
    
        public virtual int spDepartamentosZonasEliminarPorBase(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDepartamentosZonasEliminarPorBase", idbaseParameter);
        }
    
        public virtual int spDepartamentosZonasEliminarPorDepartamento(Nullable<int> idbase, string depar)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDepartamentosZonasEliminarPorDepartamento", idbaseParameter, deparParameter);
        }
    
        public virtual int spDepartamentosZonasEliminarPorZona(Nullable<int> idbase, string depar, string ubic, string tipo)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDepartamentosZonasEliminarPorZona", idbaseParameter, deparParameter, ubicParameter, tipoParameter);
        }
    
        public virtual int spDepartamentosZonasInsertar(string depar, string zona, Nullable<int> idbase, Nullable<System.DateTime> fecha, Nullable<int> idusuario, string ubic, string tipo)
        {
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDepartamentosZonasInsertar", deparParameter, zonaParameter, idbaseParameter, fechaParameter, idusuarioParameter, ubicParameter, tipoParameter);
        }
    
        public virtual ObjectResult<spDepartamentosZonasPorBase_Result> spDepartamentosZonasPorBase(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDepartamentosZonasPorBase_Result>("spDepartamentosZonasPorBase", idbaseParameter);
        }
    
        public virtual ObjectResult<spDepartamentosZonasPorUbicacion_Result> spDepartamentosZonasPorUbicacion(string ubic, Nullable<int> idbase)
        {
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDepartamentosZonasPorUbicacion_Result>("spDepartamentosZonasPorUbicacion", ubicParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<string> spDepartamentosZonasUbicacionesAuditadasPorZona(string depar, Nullable<int> idbase, string tipo, string zona, Nullable<System.DateTime> fecha)
        {
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDepartamentosZonasUbicacionesAuditadasPorZona", deparParameter, idbaseParameter, tipoParameter, zonaParameter, fechaParameter);
        }
    
        public virtual ObjectResult<string> spDepartamentosZonasUbicacionesPorZona(string depar, Nullable<int> idbase, string tipo, string zona)
        {
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDepartamentosZonasUbicacionesPorZona", deparParameter, idbaseParameter, tipoParameter, zonaParameter);
        }
    
        public virtual ObjectResult<spDepartamentosZonasUbicacionesTerminadasPorZona_Result> spDepartamentosZonasUbicacionesTerminadasPorZona(string depar, Nullable<int> idbase, string tipo, string zona)
        {
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDepartamentosZonasUbicacionesTerminadasPorZona_Result>("spDepartamentosZonasUbicacionesTerminadasPorZona", deparParameter, idbaseParameter, tipoParameter, zonaParameter);
        }
    
        public virtual ObjectResult<spDepositoPisoEnToma_Result> spDepositoPisoEnToma(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDepositoPisoEnToma_Result>("spDepositoPisoEnToma", idbaseParameter);
        }
    
        public virtual ObjectResult<spDivisionesZonasConsulta_Result> spDivisionesZonasConsulta(string division, string zona, string ubic, Nullable<int> idbase)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDivisionesZonasConsulta_Result>("spDivisionesZonasConsulta", divisionParameter, zonaParameter, ubicParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<spDivisionesZonasConsultaPorDivision_Result> spDivisionesZonasConsultaPorDivision(string division, Nullable<int> idbase, string tipo)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDivisionesZonasConsultaPorDivision_Result>("spDivisionesZonasConsultaPorDivision", divisionParameter, idbaseParameter, tipoParameter);
        }
    
        public virtual int spDivisionesZonasEliminar(string division, string zona, string ubic, Nullable<int> idbase)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDivisionesZonasEliminar", divisionParameter, zonaParameter, ubicParameter, idbaseParameter);
        }
    
        public virtual int spDivisionesZonasEliminarPorBase(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDivisionesZonasEliminarPorBase", idbaseParameter);
        }
    
        public virtual int spDivisionesZonasEliminarPorDivision(Nullable<int> idbase, string division)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDivisionesZonasEliminarPorDivision", idbaseParameter, divisionParameter);
        }
    
        public virtual int spDivisionesZonasEliminarPorZona(Nullable<int> idbase, string division, string ubic, string tipo)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDivisionesZonasEliminarPorZona", idbaseParameter, divisionParameter, ubicParameter, tipoParameter);
        }
    
        public virtual int spDivisionesZonasInsertar(string division, string zona, Nullable<int> idbase, Nullable<System.DateTime> fecha, Nullable<int> idusuario, string ubic, string tipo)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDivisionesZonasInsertar", divisionParameter, zonaParameter, idbaseParameter, fechaParameter, idusuarioParameter, ubicParameter, tipoParameter);
        }
    
        public virtual ObjectResult<spDivisionesZonasPorBase_Result> spDivisionesZonasPorBase(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDivisionesZonasPorBase_Result>("spDivisionesZonasPorBase", idbaseParameter);
        }
    
        public virtual ObjectResult<spDivisionesZonasPorUbicacion_Result> spDivisionesZonasPorUbicacion(string ubic, Nullable<int> idbase)
        {
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDivisionesZonasPorUbicacion_Result>("spDivisionesZonasPorUbicacion", ubicParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<string> spDivisionesZonasUbicacionesAuditadasPorZona(string division, Nullable<int> idbase, string tipo, string zona, Nullable<System.DateTime> fecha)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDivisionesZonasUbicacionesAuditadasPorZona", divisionParameter, idbaseParameter, tipoParameter, zonaParameter, fechaParameter);
        }
    
        public virtual ObjectResult<string> spDivisionesZonasUbicacionesPorZona(string division, Nullable<int> idbase, string tipo, string zona)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDivisionesZonasUbicacionesPorZona", divisionParameter, idbaseParameter, tipoParameter, zonaParameter);
        }
    
        public virtual ObjectResult<spDivisionesZonasUbicacionesTerminadasPorZona_Result> spDivisionesZonasUbicacionesTerminadasPorZona(string division, Nullable<int> idbase, string tipo, string zona)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("division", division) :
                new ObjectParameter("division", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDivisionesZonasUbicacionesTerminadasPorZona_Result>("spDivisionesZonasUbicacionesTerminadasPorZona", divisionParameter, idbaseParameter, tipoParameter, zonaParameter);
        }
    
        public virtual int spEliminarEntrada(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarEntrada", idParameter);
        }
    
        public virtual int spEliminarEntradaPorMarca(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarEntradaPorMarca", idParameter);
        }
    
        public virtual int spEliminarIdentificadoresPisoVentas(string ident, Nullable<int> idbase)
        {
            var identParameter = ident != null ?
                new ObjectParameter("ident", ident) :
                new ObjectParameter("ident", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarIdentificadoresPisoVentas", identParameter, idbaseParameter);
        }
    
        public virtual int spEntradas(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEntradas", idbaseParameter);
        }
    
        public virtual ObjectResult<spEntradasB0_Result> spEntradasB0(Nullable<int> idbase, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasB0_Result>("spEntradasB0", idbaseParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<spEntradasPN_Result> spEntradasPN(Nullable<int> idbase, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasPN_Result>("spEntradasPN", idbaseParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual int spEntradasTemporalesAutorizacionesInsertar(Nullable<int> identradatemp, Nullable<int> idusuario, string causa, string obser, Nullable<System.DateTime> fecha)
        {
            var identradatempParameter = identradatemp.HasValue ?
                new ObjectParameter("identradatemp", identradatemp) :
                new ObjectParameter("identradatemp", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var causaParameter = causa != null ?
                new ObjectParameter("causa", causa) :
                new ObjectParameter("causa", typeof(string));
    
            var obserParameter = obser != null ?
                new ObjectParameter("obser", obser) :
                new ObjectParameter("obser", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEntradasTemporalesAutorizacionesInsertar", identradatempParameter, idusuarioParameter, causaParameter, obserParameter, fechaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spEntradasTemporalesBultosCargadosPorPedido(Nullable<int> pedido)
        {
            var pedidoParameter = pedido.HasValue ?
                new ObjectParameter("pedido", pedido) :
                new ObjectParameter("pedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spEntradasTemporalesBultosCargadosPorPedido", pedidoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spEntradasTemporalesBultosDescargadosPorPedido(Nullable<int> pedido)
        {
            var pedidoParameter = pedido.HasValue ?
                new ObjectParameter("pedido", pedido) :
                new ObjectParameter("pedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spEntradasTemporalesBultosDescargadosPorPedido", pedidoParameter);
        }
    
        public virtual ObjectResult<string> spEntradasTemporalesCantidadBultosDescargadosPorControlDeCarga(string ctrlcarga, Nullable<int> basedestino)
        {
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            var basedestinoParameter = basedestino.HasValue ?
                new ObjectParameter("basedestino", basedestino) :
                new ObjectParameter("basedestino", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spEntradasTemporalesCantidadBultosDescargadosPorControlDeCarga", ctrlcargaParameter, basedestinoParameter);
        }
    
        public virtual ObjectResult<spEntradasTemporalesConsultaPorControles_Result> spEntradasTemporalesConsultaPorControles(Nullable<int> idbase, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasTemporalesConsultaPorControles_Result>("spEntradasTemporalesConsultaPorControles", idbaseParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<string> spEntradasTemporalesControlesDeCarga(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spEntradasTemporalesControlesDeCarga", idbaseParameter);
        }
    
        public virtual int spEntradasTemporalesMarcarAnterioresaunaFecha(Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEntradasTemporalesMarcarAnterioresaunaFecha", idbaseParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spEntradasTemporalesPorBulto_Result> spEntradasTemporalesPorBulto(string bulto)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasTemporalesPorBulto_Result>("spEntradasTemporalesPorBulto", bultoParameter);
        }
    
        public virtual ObjectResult<spEntradasTemporalesPorBulto2_Result> spEntradasTemporalesPorBulto2(string bulto, Nullable<int> @base)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasTemporalesPorBulto2_Result>("spEntradasTemporalesPorBulto2", bultoParameter, baseParameter);
        }
    
        public virtual ObjectResult<spEntradasTemporalesPorBultoConsolidado_Result> spEntradasTemporalesPorBultoConsolidado(string bulto)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasTemporalesPorBultoConsolidado_Result>("spEntradasTemporalesPorBultoConsolidado", bultoParameter);
        }
    
        public virtual ObjectResult<spEntradasTemporalesPorBultoSolo_Result> spEntradasTemporalesPorBultoSolo(string bulto)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasTemporalesPorBultoSolo_Result>("spEntradasTemporalesPorBultoSolo", bultoParameter);
        }
    
        public virtual ObjectResult<spEntradasTemporalesPorPedido_Result> spEntradasTemporalesPorPedido(Nullable<int> pedido)
        {
            var pedidoParameter = pedido.HasValue ?
                new ObjectParameter("pedido", pedido) :
                new ObjectParameter("pedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasTemporalesPorPedido_Result>("spEntradasTemporalesPorPedido", pedidoParameter);
        }
    
        public virtual ObjectResult<spEntradasTemporalesReportesDiferencias_Result> spEntradasTemporalesReportesDiferencias(string ctrlcarga)
        {
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasTemporalesReportesDiferencias_Result>("spEntradasTemporalesReportesDiferencias", ctrlcargaParameter);
        }
    
        public virtual ObjectResult<spEntradasTemporalesReportesPackingList_Result> spEntradasTemporalesReportesPackingList(string ctrlcarga)
        {
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntradasTemporalesReportesPackingList_Result>("spEntradasTemporalesReportesPackingList", ctrlcargaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spEntradaTemporalMarcarBultoNoDescargado(string bulto, string referencia)
        {
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            var referenciaParameter = referencia != null ?
                new ObjectParameter("referencia", referencia) :
                new ObjectParameter("referencia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spEntradaTemporalMarcarBultoNoDescargado", bultoParameter, referenciaParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> spFechaMinimaInventarioDeposito(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("spFechaMinimaInventarioDeposito", idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> spFechaMinimaInventarioPiso(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("spFechaMinimaInventarioPiso", idbaseParameter);
        }
    
        public virtual int spFechasInventarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFechasInventarios");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> spFechasInventariosDeposito(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("spFechasInventariosDeposito", idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> spFechasInventariosPiso(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("spFechasInventariosPiso", idbaseParameter);
        }
    
        public virtual ObjectResult<spFrecuenciaCantidadDeposito_Result> spFrecuenciaCantidadDeposito(string codbarra, Nullable<int> idbase)
        {
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFrecuenciaCantidadDeposito_Result>("spFrecuenciaCantidadDeposito", codbarraParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<spFrecuenciaCantidadDeposito1_Result> spFrecuenciaCantidadDeposito1(string codbarra, Nullable<int> idbase, string ident)
        {
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var identParameter = ident != null ?
                new ObjectParameter("ident", ident) :
                new ObjectParameter("ident", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFrecuenciaCantidadDeposito1_Result>("spFrecuenciaCantidadDeposito1", codbarraParameter, idbaseParameter, identParameter);
        }
    
        public virtual ObjectResult<spFrecuenciaCantidadPiso_Result> spFrecuenciaCantidadPiso(string codbarra, Nullable<int> idbase)
        {
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFrecuenciaCantidadPiso_Result>("spFrecuenciaCantidadPiso", codbarraParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<spFrecuenciaCantidadPiso1_Result> spFrecuenciaCantidadPiso1(string codbarra, Nullable<int> idbase, string ident)
        {
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var identParameter = ident != null ?
                new ObjectParameter("ident", ident) :
                new ObjectParameter("ident", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFrecuenciaCantidadPiso1_Result>("spFrecuenciaCantidadPiso1", codbarraParameter, idbaseParameter, identParameter);
        }
    
        public virtual ObjectResult<spGetBasesXUsuario_Result> spGetBasesXUsuario(Nullable<int> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBasesXUsuario_Result>("spGetBasesXUsuario", usuarioIdParameter);
        }
    
        public virtual ObjectResult<spGetDocEstatus_Result> spGetDocEstatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetDocEstatus_Result>("spGetDocEstatus");
        }
    
        public virtual ObjectResult<spIdentificadorOcupado_Result> spIdentificadorOcupado(Nullable<int> idbase, string identificador, Nullable<int> idusuario)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spIdentificadorOcupado_Result>("spIdentificadorOcupado", idbaseParameter, identificadorParameter, idusuarioParameter);
        }
    
        public virtual ObjectResult<spIdentificadorOcupadoDeposito_Result> spIdentificadorOcupadoDeposito(Nullable<int> idbase, string identificador, Nullable<int> idusuario)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spIdentificadorOcupadoDeposito_Result>("spIdentificadorOcupadoDeposito", idbaseParameter, identificadorParameter, idusuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spIdTransaccionDeposito(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spIdTransaccionDeposito", idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spIdTransaccionPiso(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spIdTransaccionPiso", idbaseParameter);
        }
    
        public virtual int spInsertarAjustePDT(string codbarra, Nullable<int> cantidad, Nullable<System.DateTime> fecha, string hora, Nullable<int> idusuario, Nullable<int> idloc, Nullable<int> idtran, Nullable<int> idbase)
        {
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var idlocParameter = idloc.HasValue ?
                new ObjectParameter("idloc", idloc) :
                new ObjectParameter("idloc", typeof(int));
    
            var idtranParameter = idtran.HasValue ?
                new ObjectParameter("idtran", idtran) :
                new ObjectParameter("idtran", typeof(int));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarAjustePDT", codbarraParameter, cantidadParameter, fechaParameter, horaParameter, idusuarioParameter, idlocParameter, idtranParameter, idbaseParameter);
        }
    
        public virtual int spInsertarDeposito(string identificador, string codbarra, Nullable<int> cantidad, Nullable<System.DateTime> fecha, string hora, Nullable<int> @base, Nullable<int> idusuario, Nullable<int> idtran, string estilo, Nullable<decimal> sku, Nullable<bool> ajuste, string comentario, string control_inventario, Nullable<bool> marcado)
        {
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var idtranParameter = idtran.HasValue ?
                new ObjectParameter("idtran", idtran) :
                new ObjectParameter("idtran", typeof(int));
    
            var estiloParameter = estilo != null ?
                new ObjectParameter("estilo", estilo) :
                new ObjectParameter("estilo", typeof(string));
    
            var skuParameter = sku.HasValue ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(decimal));
    
            var ajusteParameter = ajuste.HasValue ?
                new ObjectParameter("ajuste", ajuste) :
                new ObjectParameter("ajuste", typeof(bool));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var marcadoParameter = marcado.HasValue ?
                new ObjectParameter("marcado", marcado) :
                new ObjectParameter("marcado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarDeposito", identificadorParameter, codbarraParameter, cantidadParameter, fechaParameter, horaParameter, baseParameter, idusuarioParameter, idtranParameter, estiloParameter, skuParameter, ajusteParameter, comentarioParameter, control_inventarioParameter, marcadoParameter);
        }
    
        public virtual int spInsertarDepositoPiso(string codbarra, Nullable<int> cant, Nullable<int> idbase, Nullable<int> idusuario, Nullable<System.DateTime> fecha, string comen)
        {
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var cantParameter = cant.HasValue ?
                new ObjectParameter("cant", cant) :
                new ObjectParameter("cant", typeof(int));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var comenParameter = comen != null ?
                new ObjectParameter("comen", comen) :
                new ObjectParameter("comen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarDepositoPiso", codbarraParameter, cantParameter, idbaseParameter, idusuarioParameter, fechaParameter, comenParameter);
        }
    
        public virtual int spInsertarEntradaTemporal(Nullable<int> idbase, string codbarra, Nullable<int> cantidad, Nullable<System.DateTime> fecha, string fuenteentrada)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fuenteentradaParameter = fuenteentrada != null ?
                new ObjectParameter("fuenteentrada", fuenteentrada) :
                new ObjectParameter("fuenteentrada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarEntradaTemporal", idbaseParameter, codbarraParameter, cantidadParameter, fechaParameter, fuenteentradaParameter);
        }
    
        public virtual int spInsertarEntradaTemporalTodo(Nullable<int> idbase, string codbarra, Nullable<int> cantidad, Nullable<System.DateTime> fecha, string fuenteentrada, string no_camion, string movtransp, string ctrlcarga, string bto_cons, string bulto, string referencia, Nullable<int> id_usuario, Nullable<System.DateTime> fechacarga, Nullable<bool> descargado, string numlinea, Nullable<int> pedido)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fuenteentradaParameter = fuenteentrada != null ?
                new ObjectParameter("fuenteentrada", fuenteentrada) :
                new ObjectParameter("fuenteentrada", typeof(string));
    
            var no_camionParameter = no_camion != null ?
                new ObjectParameter("no_camion", no_camion) :
                new ObjectParameter("no_camion", typeof(string));
    
            var movtranspParameter = movtransp != null ?
                new ObjectParameter("movtransp", movtransp) :
                new ObjectParameter("movtransp", typeof(string));
    
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            var bto_consParameter = bto_cons != null ?
                new ObjectParameter("bto_cons", bto_cons) :
                new ObjectParameter("bto_cons", typeof(string));
    
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            var referenciaParameter = referencia != null ?
                new ObjectParameter("referencia", referencia) :
                new ObjectParameter("referencia", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var fechacargaParameter = fechacarga.HasValue ?
                new ObjectParameter("fechacarga", fechacarga) :
                new ObjectParameter("fechacarga", typeof(System.DateTime));
    
            var descargadoParameter = descargado.HasValue ?
                new ObjectParameter("descargado", descargado) :
                new ObjectParameter("descargado", typeof(bool));
    
            var numlineaParameter = numlinea != null ?
                new ObjectParameter("numlinea", numlinea) :
                new ObjectParameter("numlinea", typeof(string));
    
            var pedidoParameter = pedido.HasValue ?
                new ObjectParameter("pedido", pedido) :
                new ObjectParameter("pedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarEntradaTemporalTodo", idbaseParameter, codbarraParameter, cantidadParameter, fechaParameter, fuenteentradaParameter, no_camionParameter, movtranspParameter, ctrlcargaParameter, bto_consParameter, bultoParameter, referenciaParameter, id_usuarioParameter, fechacargaParameter, descargadoParameter, numlineaParameter, pedidoParameter);
        }
    
        public virtual int spInsertarEntradaTemporalTodoConMarca(Nullable<int> idbase, string codbarra, Nullable<int> cantidad, Nullable<System.DateTime> fecha, string fuenteentrada, string no_camion, string movtransp, string ctrlcarga, string bto_cons, string bulto, string referencia, Nullable<int> id_usuario, Nullable<System.DateTime> fechacarga, Nullable<bool> descargado, Nullable<bool> marca, string numlinea, Nullable<int> pedido)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fuenteentradaParameter = fuenteentrada != null ?
                new ObjectParameter("fuenteentrada", fuenteentrada) :
                new ObjectParameter("fuenteentrada", typeof(string));
    
            var no_camionParameter = no_camion != null ?
                new ObjectParameter("no_camion", no_camion) :
                new ObjectParameter("no_camion", typeof(string));
    
            var movtranspParameter = movtransp != null ?
                new ObjectParameter("movtransp", movtransp) :
                new ObjectParameter("movtransp", typeof(string));
    
            var ctrlcargaParameter = ctrlcarga != null ?
                new ObjectParameter("ctrlcarga", ctrlcarga) :
                new ObjectParameter("ctrlcarga", typeof(string));
    
            var bto_consParameter = bto_cons != null ?
                new ObjectParameter("bto_cons", bto_cons) :
                new ObjectParameter("bto_cons", typeof(string));
    
            var bultoParameter = bulto != null ?
                new ObjectParameter("bulto", bulto) :
                new ObjectParameter("bulto", typeof(string));
    
            var referenciaParameter = referencia != null ?
                new ObjectParameter("referencia", referencia) :
                new ObjectParameter("referencia", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var fechacargaParameter = fechacarga.HasValue ?
                new ObjectParameter("fechacarga", fechacarga) :
                new ObjectParameter("fechacarga", typeof(System.DateTime));
    
            var descargadoParameter = descargado.HasValue ?
                new ObjectParameter("descargado", descargado) :
                new ObjectParameter("descargado", typeof(bool));
    
            var marcaParameter = marca.HasValue ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(bool));
    
            var numlineaParameter = numlinea != null ?
                new ObjectParameter("numlinea", numlinea) :
                new ObjectParameter("numlinea", typeof(string));
    
            var pedidoParameter = pedido.HasValue ?
                new ObjectParameter("pedido", pedido) :
                new ObjectParameter("pedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarEntradaTemporalTodoConMarca", idbaseParameter, codbarraParameter, cantidadParameter, fechaParameter, fuenteentradaParameter, no_camionParameter, movtranspParameter, ctrlcargaParameter, bto_consParameter, bultoParameter, referenciaParameter, id_usuarioParameter, fechacargaParameter, descargadoParameter, marcaParameter, numlineaParameter, pedidoParameter);
        }
    
        public virtual int spInsertarMermaPDT(string codbarra, Nullable<int> cantidad, Nullable<System.DateTime> fecha, string hora, Nullable<int> idusuario, Nullable<int> idloc, Nullable<int> idtran, Nullable<int> idbase)
        {
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var idlocParameter = idloc.HasValue ?
                new ObjectParameter("idloc", idloc) :
                new ObjectParameter("idloc", typeof(int));
    
            var idtranParameter = idtran.HasValue ?
                new ObjectParameter("idtran", idtran) :
                new ObjectParameter("idtran", typeof(int));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarMermaPDT", codbarraParameter, cantidadParameter, fechaParameter, horaParameter, idusuarioParameter, idlocParameter, idtranParameter, idbaseParameter);
        }
    
        public virtual int spInsertarPiso(string identificador, string codbarra, Nullable<int> cantidad, Nullable<System.DateTime> fecha, string hora, Nullable<int> @base, Nullable<int> idusuario, Nullable<int> idtran, string estilo, Nullable<decimal> sku, Nullable<bool> ajuste, string comentario, string control_inventario, Nullable<bool> marcado)
        {
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            var idtranParameter = idtran.HasValue ?
                new ObjectParameter("idtran", idtran) :
                new ObjectParameter("idtran", typeof(int));
    
            var estiloParameter = estilo != null ?
                new ObjectParameter("estilo", estilo) :
                new ObjectParameter("estilo", typeof(string));
    
            var skuParameter = sku.HasValue ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(decimal));
    
            var ajusteParameter = ajuste.HasValue ?
                new ObjectParameter("ajuste", ajuste) :
                new ObjectParameter("ajuste", typeof(bool));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var control_inventarioParameter = control_inventario != null ?
                new ObjectParameter("control_inventario", control_inventario) :
                new ObjectParameter("control_inventario", typeof(string));
    
            var marcadoParameter = marcado.HasValue ?
                new ObjectParameter("marcado", marcado) :
                new ObjectParameter("marcado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarPiso", identificadorParameter, codbarraParameter, cantidadParameter, fechaParameter, horaParameter, baseParameter, idusuarioParameter, idtranParameter, estiloParameter, skuParameter, ajusteParameter, comentarioParameter, control_inventarioParameter, marcadoParameter);
        }
    
        public virtual int spInventario(Nullable<int> idbase, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInventario", idbaseParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<spInventarioAntesTomaStevensConsultar_Result> spInventarioAntesTomaStevensConsultar(Nullable<int> idbase, Nullable<int> iddepar)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var iddeparParameter = iddepar.HasValue ?
                new ObjectParameter("iddepar", iddepar) :
                new ObjectParameter("iddepar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioAntesTomaStevensConsultar_Result>("spInventarioAntesTomaStevensConsultar", idbaseParameter, iddeparParameter);
        }
    
        public virtual int spInventarioAntesTomaStevensInsertar(Nullable<int> idbase, Nullable<int> iddepar, Nullable<decimal> entradas, Nullable<decimal> salidas)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var iddeparParameter = iddepar.HasValue ?
                new ObjectParameter("iddepar", iddepar) :
                new ObjectParameter("iddepar", typeof(int));
    
            var entradasParameter = entradas.HasValue ?
                new ObjectParameter("entradas", entradas) :
                new ObjectParameter("entradas", typeof(decimal));
    
            var salidasParameter = salidas.HasValue ?
                new ObjectParameter("salidas", salidas) :
                new ObjectParameter("salidas", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInventarioAntesTomaStevensInsertar", idbaseParameter, iddeparParameter, entradasParameter, salidasParameter);
        }
    
        public virtual ObjectResult<spInventarioDeposito_Result> spInventarioDeposito(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDeposito_Result>("spInventarioDeposito", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioDepositoCostoPiezasPorBase_Result> spInventarioDepositoCostoPiezasPorBase(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDepositoCostoPiezasPorBase_Result>("spInventarioDepositoCostoPiezasPorBase", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioDepositoEntreFechas_Result> spInventarioDepositoEntreFechas(Nullable<int> idbase, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDepositoEntreFechas_Result>("spInventarioDepositoEntreFechas", idbaseParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<spInventarioDepositoFecha_Result> spInventarioDepositoFecha(Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDepositoFecha_Result>("spInventarioDepositoFecha", idbaseParameter, fechaParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> spInventarioDepositoFechaInicio(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("spInventarioDepositoFechaInicio", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioDepositoFechasExtremas_Result> spInventarioDepositoFechasExtremas(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDepositoFechasExtremas_Result>("spInventarioDepositoFechasExtremas", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioDepositoIdentificadores_Result> spInventarioDepositoIdentificadores(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDepositoIdentificadores_Result>("spInventarioDepositoIdentificadores", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioDepositoPorUsuario_Result> spInventarioDepositoPorUsuario(Nullable<int> idbase, Nullable<int> idusuario)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDepositoPorUsuario_Result>("spInventarioDepositoPorUsuario", idbaseParameter, idusuarioParameter);
        }
    
        public virtual ObjectResult<spInventarioDepositoProblemas_Result> spInventarioDepositoProblemas(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDepositoProblemas_Result>("spInventarioDepositoProblemas", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioDepositoUbicacionesPorCodigo_Result> spInventarioDepositoUbicacionesPorCodigo(string codbar, Nullable<int> idbase)
        {
            var codbarParameter = codbar != null ?
                new ObjectParameter("codbar", codbar) :
                new ObjectParameter("codbar", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioDepositoUbicacionesPorCodigo_Result>("spInventarioDepositoUbicacionesPorCodigo", codbarParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInventarioDepositoUsuarios(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInventarioDepositoUsuarios", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioPiso_Result> spInventarioPiso(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPiso_Result>("spInventarioPiso", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioPisoCostoPiezasPorBase_Result> spInventarioPisoCostoPiezasPorBase(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPisoCostoPiezasPorBase_Result>("spInventarioPisoCostoPiezasPorBase", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioPisoEntreFechas_Result> spInventarioPisoEntreFechas(Nullable<int> idbase, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPisoEntreFechas_Result>("spInventarioPisoEntreFechas", idbaseParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<spInventarioPisoFecha_Result> spInventarioPisoFecha(Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPisoFecha_Result>("spInventarioPisoFecha", idbaseParameter, fechaParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> spInventarioPisoFechaInicio(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("spInventarioPisoFechaInicio", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioPisoFechasExtremas_Result> spInventarioPisoFechasExtremas(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPisoFechasExtremas_Result>("spInventarioPisoFechasExtremas", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioPisoIdentificadores_Result> spInventarioPisoIdentificadores(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPisoIdentificadores_Result>("spInventarioPisoIdentificadores", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioPisoPorUsuario_Result> spInventarioPisoPorUsuario(Nullable<int> idbase, Nullable<int> idusuario)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPisoPorUsuario_Result>("spInventarioPisoPorUsuario", idbaseParameter, idusuarioParameter);
        }
    
        public virtual ObjectResult<spInventarioPisoProblemas_Result> spInventarioPisoProblemas(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPisoProblemas_Result>("spInventarioPisoProblemas", idbaseParameter);
        }
    
        public virtual ObjectResult<spInventarioPisoUbicacionesPorCodigo_Result> spInventarioPisoUbicacionesPorCodigo(string codbar, Nullable<int> idbase)
        {
            var codbarParameter = codbar != null ?
                new ObjectParameter("codbar", codbar) :
                new ObjectParameter("codbar", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventarioPisoUbicacionesPorCodigo_Result>("spInventarioPisoUbicacionesPorCodigo", codbarParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInventarioPisoUsuarios(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInventarioPisoUsuarios", idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInventarioUsuariosDeposito(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInventarioUsuariosDeposito", idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInventarioUsuariosPiso(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInventarioUsuariosPiso", idbaseParameter);
        }
    
        public virtual int spMarcarAjustePDT(Nullable<int> idbase, Nullable<int> id)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMarcarAjustePDT", idbaseParameter, idParameter);
        }
    
        public virtual int spMarcarDepositoPisoEnToma(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMarcarDepositoPisoEnToma", idbaseParameter);
        }
    
        public virtual int spMarcarInventario(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMarcarInventario", idbaseParameter);
        }
    
        public virtual int spMarcarInventarioDeposito(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMarcarInventarioDeposito", idParameter);
        }
    
        public virtual int spMarcarInventarioPiso(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMarcarInventarioPiso", idParameter);
        }
    
        public virtual int spMarcarInventarioPorUsuario(Nullable<int> idbase, Nullable<int> idusuario)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMarcarInventarioPorUsuario", idbaseParameter, idusuarioParameter);
        }
    
        public virtual int spMarcarMermaPDT(Nullable<int> idbase, Nullable<int> id)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMarcarMermaPDT", idbaseParameter, idParameter);
        }
    
        public virtual int spMermasEliminarHaceUnaSemana(Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMermasEliminarHaceUnaSemana", idbaseParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spMermasPDT_Result> spMermasPDT(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMermasPDT_Result>("spMermasPDT", idbaseParameter);
        }
    
        public virtual ObjectResult<spMermasPDTFecha_Result> spMermasPDTFecha(Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMermasPDTFecha_Result>("spMermasPDTFecha", idbaseParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spPerteneceAPiso_Result> spPerteneceAPiso(string codbarra, Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var codbarraParameter = codbarra != null ?
                new ObjectParameter("codbarra", codbarra) :
                new ObjectParameter("codbarra", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPerteneceAPiso_Result>("spPerteneceAPiso", codbarraParameter, idbaseParameter, fechaParameter);
        }
    
        public virtual int spProductoSAPPorCodigoBarra(string codbar)
        {
            var codbarParameter = codbar != null ?
                new ObjectParameter("codbar", codbar) :
                new ObjectParameter("codbar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProductoSAPPorCodigoBarra", codbarParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spProductosUbicadosDeposito(string identificador, Nullable<int> idbase)
        {
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spProductosUbicadosDeposito", identificadorParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spProductosUbicadosPiso(string identificador, Nullable<int> idbase)
        {
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spProductosUbicadosPiso", identificadorParameter, idbaseParameter);
        }
    
        public virtual ObjectResult<spRegistroAuditoriasConsulta_Result> spRegistroAuditoriasConsulta(string documento, Nullable<int> @base, Nullable<System.DateTime> fecha1)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            var baseParameter = @base.HasValue ?
                new ObjectParameter("base", @base) :
                new ObjectParameter("base", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRegistroAuditoriasConsulta_Result>("spRegistroAuditoriasConsulta", documentoParameter, baseParameter, fecha1Parameter);
        }
    
        public virtual int spRegistroAuditoriasEnProgresoPorZona(string depar, string zona, Nullable<System.DateTime> fecha, Nullable<int> idbase)
        {
            var deparParameter = depar != null ?
                new ObjectParameter("depar", depar) :
                new ObjectParameter("depar", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("zona", zona) :
                new ObjectParameter("zona", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRegistroAuditoriasEnProgresoPorZona", deparParameter, zonaParameter, fechaParameter, idbaseParameter);
        }
    
        public virtual int spRegistroAuditoriasInsertar(string identificador, string codigobarra, Nullable<int> cantidadajustada, Nullable<System.DateTime> fecha, Nullable<int> idusuarioautoriza, Nullable<int> idusuarioauditado, Nullable<int> idbase)
        {
            var identificadorParameter = identificador != null ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(string));
    
            var codigobarraParameter = codigobarra != null ?
                new ObjectParameter("codigobarra", codigobarra) :
                new ObjectParameter("codigobarra", typeof(string));
    
            var cantidadajustadaParameter = cantidadajustada.HasValue ?
                new ObjectParameter("cantidadajustada", cantidadajustada) :
                new ObjectParameter("cantidadajustada", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idusuarioautorizaParameter = idusuarioautoriza.HasValue ?
                new ObjectParameter("idusuarioautoriza", idusuarioautoriza) :
                new ObjectParameter("idusuarioautoriza", typeof(int));
    
            var idusuarioauditadoParameter = idusuarioauditado.HasValue ?
                new ObjectParameter("idusuarioauditado", idusuarioauditado) :
                new ObjectParameter("idusuarioauditado", typeof(int));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRegistroAuditoriasInsertar", identificadorParameter, codigobarraParameter, cantidadajustadaParameter, fechaParameter, idusuarioautorizaParameter, idusuarioauditadoParameter, idbaseParameter);
        }
    
        public virtual int spReporteDetalladoInventarioPorBasePorDepartamentoDespuesToma(Nullable<int> iddepar, Nullable<int> idbase, Nullable<System.DateTime> fecha)
        {
            var iddeparParameter = iddepar.HasValue ?
                new ObjectParameter("iddepar", iddepar) :
                new ObjectParameter("iddepar", typeof(int));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReporteDetalladoInventarioPorBasePorDepartamentoDespuesToma", iddeparParameter, idbaseParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spReporteDiferenciasParaBase0_Result> spReporteDiferenciasParaBase0(Nullable<System.DateTime> fechacarga1, Nullable<System.DateTime> fechacarga2)
        {
            var fechacarga1Parameter = fechacarga1.HasValue ?
                new ObjectParameter("fechacarga1", fechacarga1) :
                new ObjectParameter("fechacarga1", typeof(System.DateTime));
    
            var fechacarga2Parameter = fechacarga2.HasValue ?
                new ObjectParameter("fechacarga2", fechacarga2) :
                new ObjectParameter("fechacarga2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReporteDiferenciasParaBase0_Result>("spReporteDiferenciasParaBase0", fechacarga1Parameter, fechacarga2Parameter);
        }
    
        public virtual int spTransaccionesMarcadasMarcarId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTransaccionesMarcadasMarcarId", idParameter);
        }
    
        public virtual int spTransaccionesMarcadasMarcarTodo(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTransaccionesMarcadasMarcarTodo", idbaseParameter);
        }
    
        public virtual ObjectResult<spUbicacionesTerminadasConsulta_Result> spUbicacionesTerminadasConsulta(string ubic, Nullable<int> idbase)
        {
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUbicacionesTerminadasConsulta_Result>("spUbicacionesTerminadasConsulta", ubicParameter, idbaseParameter);
        }
    
        public virtual int spUbicacionesTerminadasEliminar(string ubic, Nullable<int> idbase)
        {
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUbicacionesTerminadasEliminar", ubicParameter, idbaseParameter);
        }
    
        public virtual int spUbicacionesTerminadasInsertar(string ubic, Nullable<int> idbase, Nullable<System.DateTime> fecha, Nullable<int> idusuario)
        {
            var ubicParameter = ubic != null ?
                new ObjectParameter("ubic", ubic) :
                new ObjectParameter("ubic", typeof(string));
    
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUbicacionesTerminadasInsertar", ubicParameter, idbaseParameter, fechaParameter, idusuarioParameter);
        }
    
        public virtual int spUbicacionesTerminadasLimpiar(Nullable<int> idbase)
        {
            var idbaseParameter = idbase.HasValue ?
                new ObjectParameter("idbase", idbase) :
                new ObjectParameter("idbase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUbicacionesTerminadasLimpiar", idbaseParameter);
        }
    
        public virtual ObjectResult<spVentasNoProcesadas_Acciones_Result> spVentasNoProcesadas_Acciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spVentasNoProcesadas_Acciones_Result>("spVentasNoProcesadas_Acciones");
        }
    
        public virtual int spVentasNoProcesadas_RecorridoInsertar(Nullable<int> miidusuario, Nullable<int> miidaccion, Nullable<int> miidtransadet, Nullable<System.DateTime> mifecha)
        {
            var miidusuarioParameter = miidusuario.HasValue ?
                new ObjectParameter("miidusuario", miidusuario) :
                new ObjectParameter("miidusuario", typeof(int));
    
            var miidaccionParameter = miidaccion.HasValue ?
                new ObjectParameter("miidaccion", miidaccion) :
                new ObjectParameter("miidaccion", typeof(int));
    
            var miidtransadetParameter = miidtransadet.HasValue ?
                new ObjectParameter("miidtransadet", miidtransadet) :
                new ObjectParameter("miidtransadet", typeof(int));
    
            var mifechaParameter = mifecha.HasValue ?
                new ObjectParameter("mifecha", mifecha) :
                new ObjectParameter("mifecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spVentasNoProcesadas_RecorridoInsertar", miidusuarioParameter, miidaccionParameter, miidtransadetParameter, mifechaParameter);
        }
    
        public virtual int spVentasNoProcesadasActualizarEstatus(Nullable<int> mi_id, Nullable<int> mi_idaccion)
        {
            var mi_idParameter = mi_id.HasValue ?
                new ObjectParameter("mi_id", mi_id) :
                new ObjectParameter("mi_id", typeof(int));
    
            var mi_idaccionParameter = mi_idaccion.HasValue ?
                new ObjectParameter("mi_idaccion", mi_idaccion) :
                new ObjectParameter("mi_idaccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spVentasNoProcesadasActualizarEstatus", mi_idParameter, mi_idaccionParameter);
        }
    
        public virtual ObjectResult<spVentasNoProcesadasConsultaPorFechasYAccion_Result> spVentasNoProcesadasConsultaPorFechasYAccion(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, string nombre_accion)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            var nombre_accionParameter = nombre_accion != null ?
                new ObjectParameter("nombre_accion", nombre_accion) :
                new ObjectParameter("nombre_accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spVentasNoProcesadasConsultaPorFechasYAccion_Result>("spVentasNoProcesadasConsultaPorFechasYAccion", fecha1Parameter, fecha2Parameter, nombre_accionParameter);
        }
    }
}
